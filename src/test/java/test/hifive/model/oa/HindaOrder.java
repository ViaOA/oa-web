// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADate;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;
 
@OAClass(
    shortName = "ho",
    displayName = "Hinda Order",
    displayProperty = "orderNumber"
)
@OATable(
    indexes = {
        @OAIndex(name = "HindaOrderOrderNumber", columns = {@OAIndexColumn(name = "OrderNumber")}),
        @OAIndex(name = "HindaOrderEmployeeAward", columns = { @OAIndexColumn(name = "EmployeeAwardId") }), 
        @OAIndex(name = "HindaOrderHifiveOrder", columns = { @OAIndexColumn(name = "HifiveOrderId") })
    }
)
public class HindaOrder extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_OrderNumber = "OrderNumber";
    public static final String P_OrderNumber = "OrderNumber";
    public static final String PROPERTY_ClientOrderNumber = "ClientOrderNumber";
    public static final String P_ClientOrderNumber = "ClientOrderNumber";
    public static final String PROPERTY_OrderDate = "OrderDate";
    public static final String P_OrderDate = "OrderDate";
     
     
    public static final String PROPERTY_EmployeeAward = "EmployeeAward";
    public static final String P_EmployeeAward = "EmployeeAward";
    public static final String PROPERTY_HifiveOrder = "HifiveOrder";
    public static final String P_HifiveOrder = "HifiveOrder";
    public static final String PROPERTY_HindaOrderLines = "HindaOrderLines";
    public static final String P_HindaOrderLines = "HindaOrderLines";
     
    protected int id;
    protected String orderNumber;
    protected String clientOrderNumber;
    protected OADate orderDate;
     
    // Links to other objects.
    protected transient EmployeeAward employeeAward;
    protected transient HifiveOrder hifiveOrder;
    protected transient Hub<HindaOrderLine> hubHindaOrderLines;
     
    public HindaOrder() {
    }
     
    public HindaOrder(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(displayName = "Order Number", maxLength = 25, displayLength = 25)
    @OAColumn(maxLength = 25)
    public String getOrderNumber() {
        return orderNumber;
    }
    
    public void setOrderNumber(String newValue) {
        fireBeforePropertyChange(P_OrderNumber, this.orderNumber, newValue);
        String old = orderNumber;
        this.orderNumber = newValue;
        firePropertyChange(P_OrderNumber, old, this.orderNumber);
    }
    @OAProperty(displayName = "Client Order Number", maxLength = 50, displayLength = 40)
    @OAColumn(maxLength = 50)
    public String getClientOrderNumber() {
        return clientOrderNumber;
    }
    
    public void setClientOrderNumber(String newValue) {
        fireBeforePropertyChange(P_ClientOrderNumber, this.clientOrderNumber, newValue);
        String old = clientOrderNumber;
        this.clientOrderNumber = newValue;
        firePropertyChange(P_ClientOrderNumber, old, this.clientOrderNumber);
    }
    @OAProperty(displayName = "Order Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getOrderDate() {
        return orderDate;
    }
    
    public void setOrderDate(OADate newValue) {
        fireBeforePropertyChange(P_OrderDate, this.orderDate, newValue);
        OADate old = orderDate;
        this.orderDate = newValue;
        firePropertyChange(P_OrderDate, old, this.orderDate);
    }
    @OAOne(
        displayName = "Employee Award", 
        reverseName = EmployeeAward.P_HindaOrder
    )
    @OAFkey(columns = {"EmployeeAwardId"})
    public EmployeeAward getEmployeeAward() {
        if (employeeAward == null) {
            employeeAward = (EmployeeAward) getObject(P_EmployeeAward);
        }
        return employeeAward;
    }
    
    public void setEmployeeAward(EmployeeAward newValue) {
        fireBeforePropertyChange(P_EmployeeAward, this.employeeAward, newValue);
        EmployeeAward old = this.employeeAward;
        this.employeeAward = newValue;
        firePropertyChange(P_EmployeeAward, old, this.employeeAward);
    }
    
    @OAOne(
        displayName = "Hifive Order", 
        reverseName = HifiveOrder.P_HindaOrder
    )
    @OAFkey(columns = {"HifiveOrderId"})
    public HifiveOrder getHifiveOrder() {
        if (hifiveOrder == null) {
            hifiveOrder = (HifiveOrder) getObject(P_HifiveOrder);
        }
        return hifiveOrder;
    }
    
    public void setHifiveOrder(HifiveOrder newValue) {
        fireBeforePropertyChange(P_HifiveOrder, this.hifiveOrder, newValue);
        HifiveOrder old = this.hifiveOrder;
        this.hifiveOrder = newValue;
        firePropertyChange(P_HifiveOrder, old, this.hifiveOrder);
    }
    
    @OAMany(
        displayName = "Hinda Order Lines", 
        toClass = HindaOrderLine.class, 
        owner = true, 
        reverseName = HindaOrderLine.P_HindaOrder, 
        cascadeSave = true, 
        cascadeDelete = true, 
        mustBeEmptyForDelete = true, 
        sortProperty = HindaOrderLine.P_OrderLineNumber
    )
    public Hub<HindaOrderLine> getHindaOrderLines() {
        if (hubHindaOrderLines == null) {
            hubHindaOrderLines = (Hub<HindaOrderLine>) getHub(P_HindaOrderLines);
        }
        return hubHindaOrderLines;
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.orderNumber = rs.getString(2);
        this.clientOrderNumber = rs.getString(3);
        java.sql.Date date;
        date = rs.getDate(4);
        if (date != null) this.orderDate = new OADate(date);
        int employeeAwardFkey = rs.getInt(5);
        if (!rs.wasNull() && employeeAwardFkey > 0) {
            setProperty(P_EmployeeAward, new OAObjectKey(employeeAwardFkey));
        }
        int hifiveOrderFkey = rs.getInt(6);
        if (!rs.wasNull() && hifiveOrderFkey > 0) {
            setProperty(P_HifiveOrder, new OAObjectKey(hifiveOrderFkey));
        }
        if (rs.getMetaData().getColumnCount() != 6) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;

import com.viaoa.annotation.*;
 
@OAClass(
    shortName = "ial",
    displayName = "Inspire Award Level",
    displayProperty = "name"
)
@OATable(
    indexes = {
        @OAIndex(name = "InspireAwardLevelProgram", columns = { @OAIndexColumn(name = "ProgramId") })
    }
)
public class InspireAwardLevel extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
    public static final String PROPERTY_Seq = "Seq";
    public static final String P_Seq = "Seq";
    public static final String PROPERTY_ApprovalLevels = "ApprovalLevels";
    public static final String P_ApprovalLevels = "ApprovalLevels";
    public static final String PROPERTY_ApproveFromTop = "ApproveFromTop";
    public static final String P_ApproveFromTop = "ApproveFromTop";
     
     
    public static final String PROPERTY_Employee = "Employee";
    public static final String P_Employee = "Employee";
    public static final String PROPERTY_InspireApprovals = "InspireApprovals";
    public static final String P_InspireApprovals = "InspireApprovals";
    public static final String PROPERTY_InspireAwardLevelLocationValues = "InspireAwardLevelLocationValues";
    public static final String P_InspireAwardLevelLocationValues = "InspireAwardLevelLocationValues";
    public static final String PROPERTY_InspireRecipients = "InspireRecipients";
    public static final String P_InspireRecipients = "InspireRecipients";
    public static final String PROPERTY_Inspires = "Inspires";
    public static final String P_Inspires = "Inspires";
    public static final String PROPERTY_Program = "Program";
    public static final String P_Program = "Program";
     
    protected int id;
    protected String name;
    protected int seq;
    protected int approvalLevels;
    protected boolean approveFromTop;
     
    // Links to other objects.
    protected transient Program program;
     
    public InspireAwardLevel() {
    }
     
    public InspireAwardLevel(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(maxLength = 75, displayLength = 18, columnLength = 12)
    @OAColumn(maxLength = 75)
    public String getName() {
        return name;
    }
    
    public void setName(String newValue) {
        fireBeforePropertyChange(P_Name, this.name, newValue);
        String old = name;
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @OAProperty(displayLength = 5, isAutoSeq = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getSeq() {
        return seq;
    }
    
    public void setSeq(int newValue) {
        fireBeforePropertyChange(P_Seq, this.seq, newValue);
        int old = seq;
        this.seq = newValue;
        firePropertyChange(P_Seq, old, this.seq);
    }
    @OAProperty(displayName = "Approval Levels", displayLength = 5, columnLength = 6)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    /**
      number of managers that will be InspireApproval.employee
    */
    public int getApprovalLevels() {
        return approvalLevels;
    }
    
    public void setApprovalLevels(int newValue) {
        fireBeforePropertyChange(P_ApprovalLevels, this.approvalLevels, newValue);
        int old = approvalLevels;
        this.approvalLevels = newValue;
        firePropertyChange(P_ApprovalLevels, old, this.approvalLevels);
    }
    @OAProperty(displayName = "Approve From Top", displayLength = 5)
    @OAColumn(sqlType = java.sql.Types.BOOLEAN)
    public boolean getApproveFromTop() {
        return approveFromTop;
    }
    
    public void setApproveFromTop(boolean newValue) {
        fireBeforePropertyChange(P_ApproveFromTop, this.approveFromTop, newValue);
        boolean old = approveFromTop;
        this.approveFromTop = newValue;
        firePropertyChange(P_ApproveFromTop, old, this.approveFromTop);
    }
    @OAOne(
        isCalculated = true, 
        reverseName = Employee.P_InspireAwardLevels, 
        allowCreateNew = false, 
        allowAddExisting = false
    )
    private Employee getEmployee() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAMany(
        displayName = "Inspire Approvals", 
        toClass = InspireApproval.class, 
        reverseName = InspireApproval.P_InspireAwardLevel, 
        createMethod = false
    )
    private Hub<InspireApproval> getInspireApprovals() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAMany(
        displayName = "Inspire Award Level Location Values", 
        toClass = InspireAwardLevelLocationValue.class, 
        reverseName = InspireAwardLevelLocationValue.P_InspireAwardLevel, 
        createMethod = false
    )
    private Hub<InspireAwardLevelLocationValue> getInspireAwardLevelLocationValues() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAMany(
        displayName = "Inspire Recipients", 
        toClass = InspireRecipient.class, 
        isCalculated = true, 
        reverseName = InspireRecipient.P_InspireAwardLevel, 
        createMethod = false
    )
    private Hub<InspireRecipient> getInspireRecipients() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAMany(
        toClass = Inspire.class, 
        reverseName = Inspire.P_InspireAwardLevel, 
        createMethod = false
    )
    private Hub<Inspire> getInspires() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAOne(
        reverseName = Program.P_InspireAwardLevels, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"ProgramId"})
    public Program getProgram() {
        if (program == null) {
            program = (Program) getObject(P_Program);
        }
        return program;
    }
    
    public void setProgram(Program newValue) {
        fireBeforePropertyChange(P_Program, this.program, newValue);
        Program old = this.program;
        this.program = newValue;
        firePropertyChange(P_Program, old, this.program);
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.name = rs.getString(2);
        this.seq = (int) rs.getInt(3);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, InspireAwardLevel.P_Seq, true);
        }
        this.approvalLevels = (int) rs.getInt(4);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, InspireAwardLevel.P_ApprovalLevels, true);
        }
        this.approveFromTop = rs.getBoolean(5);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, InspireAwardLevel.P_ApproveFromTop, true);
        }
        int programFkey = rs.getInt(6);
        if (!rs.wasNull() && programFkey > 0) {
            setProperty(P_Program, new OAObjectKey(programFkey));
        }
        if (rs.getMetaData().getColumnCount() != 6) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

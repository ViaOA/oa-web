// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;

import com.viaoa.annotation.*;
 
@OAClass(
    shortName = "qr",
    displayName = "Question Result",
    displayProperty = "questionText",
    sortProperty = "quizResult"
)
@OATable(
    indexes = {
        @OAIndex(name = "QuestionResultQuestion", columns = { @OAIndexColumn(name = "QuestionId") }), 
        @OAIndex(name = "QuestionResultQuizResult", columns = { @OAIndexColumn(name = "QuizResultId") })
    }
)
public class QuestionResult extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_QuestionText = "QuestionText";
    public static final String P_QuestionText = "QuestionText";
     
     
    public static final String PROPERTY_AnswerResults = "AnswerResults";
    public static final String P_AnswerResults = "AnswerResults";
    public static final String PROPERTY_Question = "Question";
    public static final String P_Question = "Question";
    public static final String PROPERTY_QuizResult = "QuizResult";
    public static final String P_QuizResult = "QuizResult";
     
    protected int id;
    protected String questionText;
     
    // Links to other objects.
    protected transient Hub<AnswerResult> hubAnswerResults;
    protected transient Question question;
    protected transient QuizResult quizResult;
     
    public QuestionResult() {
    }
     
    public QuestionResult(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(displayName = "Question Text", maxLength = 200, displayLength = 40)
    @OAColumn(sqlType = java.sql.Types.CLOB)
    public String getQuestionText() {
        return questionText;
    }
    
    public void setQuestionText(String newValue) {
        fireBeforePropertyChange(P_QuestionText, this.questionText, newValue);
        String old = questionText;
        this.questionText = newValue;
        firePropertyChange(P_QuestionText, old, this.questionText);
    }
    @OAMany(
        displayName = "Answer Results", 
        toClass = AnswerResult.class, 
        owner = true, 
        reverseName = AnswerResult.P_QuestionResult, 
        cascadeSave = true, 
        cascadeDelete = true
    )
    public Hub<AnswerResult> getAnswerResults() {
        if (hubAnswerResults == null) {
            hubAnswerResults = (Hub<AnswerResult>) getHub(P_AnswerResults);
        }
        return hubAnswerResults;
    }
    
    @OAOne(
        reverseName = Question.P_QuestionResults, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"QuestionId"})
    public Question getQuestion() {
        if (question == null) {
            question = (Question) getObject(P_Question);
        }
        return question;
    }
    
    public void setQuestion(Question newValue) {
        fireBeforePropertyChange(P_Question, this.question, newValue);
        Question old = this.question;
        this.question = newValue;
        firePropertyChange(P_Question, old, this.question);
    }
    
    @OAOne(
        displayName = "Quiz Result", 
        reverseName = QuizResult.P_QuestionResults, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"QuizResultId"})
    public QuizResult getQuizResult() {
        if (quizResult == null) {
            quizResult = (QuizResult) getObject(P_QuizResult);
        }
        return quizResult;
    }
    
    public void setQuizResult(QuizResult newValue) {
        fireBeforePropertyChange(P_QuizResult, this.quizResult, newValue);
        QuizResult old = this.quizResult;
        this.quizResult = newValue;
        firePropertyChange(P_QuizResult, old, this.quizResult);
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.questionText = rs.getString(2);
        int questionFkey = rs.getInt(3);
        if (!rs.wasNull() && questionFkey > 0) {
            setProperty(P_Question, new OAObjectKey(questionFkey));
        }
        int quizResultFkey = rs.getInt(4);
        if (!rs.wasNull() && quizResultFkey > 0) {
            setProperty(P_QuizResult, new OAObjectKey(quizResultFkey));
        }
        if (rs.getMetaData().getColumnCount() != 4) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

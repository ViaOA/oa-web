// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;

import com.viaoa.annotation.*;
 
@OAClass(
    shortName = "rc",
    displayName = "Report Class",
    isLookup = true,
    isPreSelect = true,
    displayProperty = "name",
    sortProperty = "name"
)
@OATable(
)
public class ReportClass extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
    public static final String PROPERTY_ClassName = "ClassName";
    public static final String P_ClassName = "ClassName";
     
     
    public static final String PROPERTY_Reports = "Reports";
    public static final String P_Reports = "Reports";
     
    protected int id;
    protected String name;
    protected String className;
     
    // Links to other objects.
    protected transient Hub<Report> hubReports;
     
    public ReportClass() {
    }
     
    public ReportClass(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(maxLength = 25, displayLength = 15)
    @OAColumn(maxLength = 25)
    public String getName() {
        return name;
    }
    
    public void setName(String newValue) {
        fireBeforePropertyChange(P_Name, this.name, newValue);
        String old = name;
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @OAProperty(displayName = "Class Name", maxLength = 50, displayLength = 16, isProcessed = true)
    @OAColumn(maxLength = 50)
    public String getClassName() {
        return className;
    }
    
    public void setClassName(String newValue) {
        fireBeforePropertyChange(P_ClassName, this.className, newValue);
        String old = className;
        this.className = newValue;
        firePropertyChange(P_ClassName, old, this.className);
    }
    @OAMany(
        toClass = Report.class, 
        recursive = true, 
        owner = true, 
        reverseName = Report.P_ReportClass, 
        cascadeSave = true, 
        cascadeDelete = true
    )
    public Hub<Report> getReports() {
        if (hubReports == null) {
            hubReports = (Hub<Report>) getHub(P_Reports);
        }
        return hubReports;
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.name = rs.getString(2);
        this.className = rs.getString(3);
        if (rs.getMetaData().getColumnCount() != 3) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

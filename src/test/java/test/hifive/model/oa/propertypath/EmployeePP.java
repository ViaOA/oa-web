// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import test.hifive.model.oa.*;
 
public class EmployeePP {
    private static AddressPPx addresses;
    private static EmployeePPx allEmployees;
    private static ProgramPPx anniversaryProgram;
    private static InspireRecipientPPx approvedInspires;
    private static PointsRequestPPx approvedPointsRequests;
    private static EmployeePPx BPEmployees;
    private static EcardPPx calcAvailableEcards;
    private static EmployeeAwardPPx calcAvailableEmployeeAwards;
    private static AwardTypePPx calcAwardTypes;
    private static EmployeePPx calcParentEmployee;
    private static CountryCodePPx countryCode;
    private static EmployeeAwardPPx employeeAwards;
    private static EmployeeCustomDataPPx employeeCustomDatas;
    private static EmployeeEcardToPPx employeeEcardRecipients;
    private static EmployeeEcardPPx employeeEcards;
    private static EmployeePPx employees;
    private static EmployeeSurveyPPx employeeSurveys;
    private static EmployeeTypePPx employeeType;
    private static PointsIssuancePPx fromPointsIssuances;
    private static HifivePPx hifiveNominations;
    private static HifiveOrderPPx hifiveOrders;
    private static HifivePPx hifives;
    private static EmployeePPx HRBPartner;
    private static InspireApprovalPPx inspireApprovals;
    private static InspireAwardLevelLocationValuePPx inspireAwardLevelLocationValues;
    private static InspireAwardLevelPPx inspireAwardLevels;
    private static AwardTypePPx inspireAwardType;
    private static InspireCoreValuePPx inspireCoreValues;
    private static CardPPx inspireImagineCard;
    private static InspireOrderPPx inspireOrders;
    private static InspireRecipientPPx inspireRecipients;
    private static InspirePPx inspires;
    private static LocationPPx location;
    private static HifivePPx managerHifives;
    private static EmployeePPx parentEmployee;
    private static PhonePPx phones;
    private static PointsApprovalPPx pointsApprovals;
    private static PointsRecordPPx pointsFromRecord;
    private static PointsIssuancePPx pointsIssuances;
    private static EmployeePPx pointsNextApproval;
    private static EmployeePPx pointsPrevApproval;
    private static PointsRequestPPx pointsRequest;
    private static ProgramPPx program;
    private static QuizResultPPx quizResults;
    private static PointsAwardLevelPPx requiresMyApproval;
     

    public static AddressPPx addresses() {
        if (addresses == null) addresses = new AddressPPx(Employee.P_Addresses);
        return addresses;
    }

    public static EmployeePPx allEmployees() {
        if (allEmployees == null) allEmployees = new EmployeePPx(Employee.P_AllEmployees);
        return allEmployees;
    }

    public static ProgramPPx anniversaryProgram() {
        if (anniversaryProgram == null) anniversaryProgram = new ProgramPPx(Employee.P_AnniversaryProgram);
        return anniversaryProgram;
    }

    public static InspireRecipientPPx approvedInspires() {
        if (approvedInspires == null) approvedInspires = new InspireRecipientPPx(Employee.P_ApprovedInspires);
        return approvedInspires;
    }

    public static PointsRequestPPx approvedPointsRequests() {
        if (approvedPointsRequests == null) approvedPointsRequests = new PointsRequestPPx(Employee.P_ApprovedPointsRequests);
        return approvedPointsRequests;
    }

    public static EmployeePPx BPEmployees() {
        if (BPEmployees == null) BPEmployees = new EmployeePPx(Employee.P_BPEmployees);
        return BPEmployees;
    }

    public static EcardPPx calcAvailableEcards() {
        if (calcAvailableEcards == null) calcAvailableEcards = new EcardPPx(Employee.P_CalcAvailableEcards);
        return calcAvailableEcards;
    }

    public static EmployeeAwardPPx calcAvailableEmployeeAwards() {
        if (calcAvailableEmployeeAwards == null) calcAvailableEmployeeAwards = new EmployeeAwardPPx(Employee.P_CalcAvailableEmployeeAwards);
        return calcAvailableEmployeeAwards;
    }

    public static AwardTypePPx calcAwardTypes() {
        if (calcAwardTypes == null) calcAwardTypes = new AwardTypePPx(Employee.P_CalcAwardTypes);
        return calcAwardTypes;
    }

    public static EmployeePPx calcParentEmployee() {
        if (calcParentEmployee == null) calcParentEmployee = new EmployeePPx(Employee.P_CalcParentEmployee);
        return calcParentEmployee;
    }

    public static CountryCodePPx countryCode() {
        if (countryCode == null) countryCode = new CountryCodePPx(Employee.P_CountryCode);
        return countryCode;
    }

    public static EmployeeAwardPPx employeeAwards() {
        if (employeeAwards == null) employeeAwards = new EmployeeAwardPPx(Employee.P_EmployeeAwards);
        return employeeAwards;
    }

    public static EmployeeCustomDataPPx employeeCustomDatas() {
        if (employeeCustomDatas == null) employeeCustomDatas = new EmployeeCustomDataPPx(Employee.P_EmployeeCustomDatas);
        return employeeCustomDatas;
    }

    public static EmployeeEcardToPPx employeeEcardRecipients() {
        if (employeeEcardRecipients == null) employeeEcardRecipients = new EmployeeEcardToPPx(Employee.P_EmployeeEcardRecipients);
        return employeeEcardRecipients;
    }

    public static EmployeeEcardPPx employeeEcards() {
        if (employeeEcards == null) employeeEcards = new EmployeeEcardPPx(Employee.P_EmployeeEcards);
        return employeeEcards;
    }

    public static EmployeePPx employees() {
        if (employees == null) employees = new EmployeePPx(Employee.P_Employees);
        return employees;
    }

    public static EmployeeSurveyPPx employeeSurveys() {
        if (employeeSurveys == null) employeeSurveys = new EmployeeSurveyPPx(Employee.P_EmployeeSurveys);
        return employeeSurveys;
    }

    public static EmployeeTypePPx employeeType() {
        if (employeeType == null) employeeType = new EmployeeTypePPx(Employee.P_EmployeeType);
        return employeeType;
    }

    public static PointsIssuancePPx fromPointsIssuances() {
        if (fromPointsIssuances == null) fromPointsIssuances = new PointsIssuancePPx(Employee.P_FromPointsIssuances);
        return fromPointsIssuances;
    }

    public static HifivePPx hifiveNominations() {
        if (hifiveNominations == null) hifiveNominations = new HifivePPx(Employee.P_HifiveNominations);
        return hifiveNominations;
    }

    public static HifiveOrderPPx hifiveOrders() {
        if (hifiveOrders == null) hifiveOrders = new HifiveOrderPPx(Employee.P_HifiveOrders);
        return hifiveOrders;
    }

    public static HifivePPx hifives() {
        if (hifives == null) hifives = new HifivePPx(Employee.P_Hifives);
        return hifives;
    }

    public static EmployeePPx HRBPartner() {
        if (HRBPartner == null) HRBPartner = new EmployeePPx(Employee.P_HRBPartner);
        return HRBPartner;
    }

    public static InspireApprovalPPx inspireApprovals() {
        if (inspireApprovals == null) inspireApprovals = new InspireApprovalPPx(Employee.P_InspireApprovals);
        return inspireApprovals;
    }

    public static InspireAwardLevelLocationValuePPx inspireAwardLevelLocationValues() {
        if (inspireAwardLevelLocationValues == null) inspireAwardLevelLocationValues = new InspireAwardLevelLocationValuePPx(Employee.P_InspireAwardLevelLocationValues);
        return inspireAwardLevelLocationValues;
    }

    public static InspireAwardLevelPPx inspireAwardLevels() {
        if (inspireAwardLevels == null) inspireAwardLevels = new InspireAwardLevelPPx(Employee.P_InspireAwardLevels);
        return inspireAwardLevels;
    }

    public static AwardTypePPx inspireAwardType() {
        if (inspireAwardType == null) inspireAwardType = new AwardTypePPx(Employee.P_InspireAwardType);
        return inspireAwardType;
    }

    public static InspireCoreValuePPx inspireCoreValues() {
        if (inspireCoreValues == null) inspireCoreValues = new InspireCoreValuePPx(Employee.P_InspireCoreValues);
        return inspireCoreValues;
    }

    public static CardPPx inspireImagineCard() {
        if (inspireImagineCard == null) inspireImagineCard = new CardPPx(Employee.P_InspireImagineCard);
        return inspireImagineCard;
    }

    public static InspireOrderPPx inspireOrders() {
        if (inspireOrders == null) inspireOrders = new InspireOrderPPx(Employee.P_InspireOrders);
        return inspireOrders;
    }

    public static InspireRecipientPPx inspireRecipients() {
        if (inspireRecipients == null) inspireRecipients = new InspireRecipientPPx(Employee.P_InspireRecipients);
        return inspireRecipients;
    }

    public static InspirePPx inspires() {
        if (inspires == null) inspires = new InspirePPx(Employee.P_Inspires);
        return inspires;
    }

    public static LocationPPx location() {
        if (location == null) location = new LocationPPx(Employee.P_Location);
        return location;
    }

    public static HifivePPx managerHifives() {
        if (managerHifives == null) managerHifives = new HifivePPx(Employee.P_ManagerHifives);
        return managerHifives;
    }

    public static EmployeePPx parentEmployee() {
        if (parentEmployee == null) parentEmployee = new EmployeePPx(Employee.P_ParentEmployee);
        return parentEmployee;
    }

    public static PhonePPx phones() {
        if (phones == null) phones = new PhonePPx(Employee.P_Phones);
        return phones;
    }

    public static PointsApprovalPPx pointsApprovals() {
        if (pointsApprovals == null) pointsApprovals = new PointsApprovalPPx(Employee.P_PointsApprovals);
        return pointsApprovals;
    }

    public static PointsRecordPPx pointsFromRecord() {
        if (pointsFromRecord == null) pointsFromRecord = new PointsRecordPPx(Employee.P_PointsFromRecord);
        return pointsFromRecord;
    }

    public static PointsIssuancePPx pointsIssuances() {
        if (pointsIssuances == null) pointsIssuances = new PointsIssuancePPx(Employee.P_PointsIssuances);
        return pointsIssuances;
    }

    public static EmployeePPx pointsNextApproval() {
        if (pointsNextApproval == null) pointsNextApproval = new EmployeePPx(Employee.P_PointsNextApproval);
        return pointsNextApproval;
    }

    public static EmployeePPx pointsPrevApproval() {
        if (pointsPrevApproval == null) pointsPrevApproval = new EmployeePPx(Employee.P_PointsPrevApproval);
        return pointsPrevApproval;
    }

    public static PointsRequestPPx pointsRequest() {
        if (pointsRequest == null) pointsRequest = new PointsRequestPPx(Employee.P_PointsRequest);
        return pointsRequest;
    }

    public static ProgramPPx program() {
        if (program == null) program = new ProgramPPx(Employee.P_Program);
        return program;
    }

    public static QuizResultPPx quizResults() {
        if (quizResults == null) quizResults = new QuizResultPPx(Employee.P_QuizResults);
        return quizResults;
    }

    public static PointsAwardLevelPPx requiresMyApproval() {
        if (requiresMyApproval == null) requiresMyApproval = new PointsAwardLevelPPx(Employee.P_RequiresMyApproval);
        return requiresMyApproval;
    }

    public static String id() {
        String s = Employee.P_Id;
        return s;
    }

    public static String created() {
        String s = Employee.P_Created;
        return s;
    }

    public static String employeeCode() {
        String s = Employee.P_EmployeeCode;
        return s;
    }

    public static String title() {
        String s = Employee.P_Title;
        return s;
    }

    public static String prefixName() {
        String s = Employee.P_PrefixName;
        return s;
    }

    public static String firstName() {
        String s = Employee.P_FirstName;
        return s;
    }

    public static String middleName() {
        String s = Employee.P_MiddleName;
        return s;
    }

    public static String lastName() {
        String s = Employee.P_LastName;
        return s;
    }

    public static String suffixName() {
        String s = Employee.P_SuffixName;
        return s;
    }

    public static String birthDate() {
        String s = Employee.P_BirthDate;
        return s;
    }

    public static String hireDate() {
        String s = Employee.P_HireDate;
        return s;
    }

    public static String loginId() {
        String s = Employee.P_LoginId;
        return s;
    }

    public static String password() {
        String s = Employee.P_Password;
        return s;
    }

    public static String inactiveDate() {
        String s = Employee.P_InactiveDate;
        return s;
    }

    public static String inactiveReason() {
        String s = Employee.P_InactiveReason;
        return s;
    }

    public static String admin() {
        String s = Employee.P_Admin;
        return s;
    }

    public static String email() {
        String s = Employee.P_Email;
        return s;
    }

    public static String email2() {
        String s = Employee.P_Email2;
        return s;
    }

    public static String workLocation() {
        String s = Employee.P_WorkLocation;
        return s;
    }

    public static String costCenter() {
        String s = Employee.P_CostCenter;
        return s;
    }

    public static String costCenterDescription() {
        String s = Employee.P_CostCenterDescription;
        return s;
    }

    public static String passwordAssignedDate() {
        String s = Employee.P_PasswordAssignedDate;
        return s;
    }

    public static String topLevelManager() {
        String s = Employee.P_TopLevelManager;
        return s;
    }

    public static String superApprover() {
        String s = Employee.P_SuperApprover;
        return s;
    }

    public static String division() {
        String s = Employee.P_Division;
        return s;
    }

    public static String isNominator() {
        String s = Employee.P_IsNominator;
        return s;
    }

    public static String companyCode() {
        String s = Employee.P_CompanyCode;
        return s;
    }

    public static String companyCodeName() {
        String s = Employee.P_CompanyCodeName;
        return s;
    }

    public static String maxNomLvl() {
        String s = Employee.P_MaxNomLvl;
        return s;
    }

    public static String fullName() {
        String s = Employee.P_FullName;
        return s;
    }

    public static String firstMiddleLastName() {
        String s = Employee.P_FirstMiddleLastName;
        return s;
    }

    public static String firstLastName() {
        String s = Employee.P_FirstLastName;
        return s;
    }

    public static String pointsIssuanceBalance() {
        String s = Employee.P_PointsIssuanceBalance;
        return s;
    }

    public static String isManagerOrGreater() {
        String s = Employee.P_IsManagerOrGreater;
        return s;
    }

    public static String isProgramManagerOrGreater() {
        String s = Employee.P_IsProgramManagerOrGreater;
        return s;
    }

    public static String hasOpenAward() {
        String s = Employee.P_HasOpenAward;
        return s;
    }

    public static String hasNewHifive() {
        String s = Employee.P_HasNewHifive;
        return s;
    }

    public static String getOpenAward() {
        String s = Employee.P_GetOpenAward;
        return s;
    }

    public static String hierarchyChanged() {
        String s = Employee.P_HierarchyChanged;
        return s;
    }

    public static String nextAnniversaryDate() {
        String s = Employee.P_NextAnniversaryDate;
        return s;
    }

    public static String calcCharityTotal() {
        String s = Employee.P_CalcCharityTotal;
        return s;
    }

    public static String inspirePointsBalance() {
        String s = Employee.P_InspirePointsBalance;
        return s;
    }

    public static String clearPassword() {
        String s = Employee.P_ClearPassword;
        return s;
    }

    public static String firstLastNamePlusTopLocation() {
        String s = Employee.P_FirstLastNamePlusTopLocation;
        return s;
    }

    public static String anniversaryDate() {
        String s = Employee.P_AnniversaryDate;
        return s;
    }

    public static String pointsTotal() {
        String s = Employee.P_PointsTotal;
        return s;
    }

    public static String pointsGrandTotal() {
        String s = Employee.P_PointsGrandTotal;
        return s;
    }

    public static String discretionaryPoints() {
        String s = Employee.P_DiscretionaryPoints;
        return s;
    }

    public static String updateHierarchy() {
        String s = "updateHierarchy";
        return s;
    }

    public static String currencyValueMethods() {
        String s = "currencyValueMethods";
        return s;
    }

    public static String customData() {
        String s = "customData";
        return s;
    }

    public static String reassignPassword() {
        String s = "reassignPassword";
        return s;
    }

    public static String getAnniversyDate() {
        String s = "getAnniversyDate";
        return s;
    }

    public static String getAnniversyNumber() {
        String s = "getAnniversyNumber";
        return s;
    }

    public static String register() {
        String s = "register";
        return s;
    }

    public static String getPointsCoreValues() {
        String s = "getPointsCoreValues";
        return s;
    }

    public static String getPointsAwardLevels() {
        String s = "getPointsAwardLevels";
        return s;
    }

    public static String loginAsThisEmployee() {
        String s = "loginAsThisEmployee";
        return s;
    }
}
 

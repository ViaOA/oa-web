// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import java.io.Serializable;

import test.hifive.model.oa.*;
 
public class LocationPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private AddOnItemPPx addOnItems;
    private AddressPPx address;
    private ProgramDocumentPPx announcementDocument;
    private AwardTypePPx awardTypes;
    private CountryCodePPx calcCountryCode;
    private ImageStorePPx calcLogoStampImageStore;
    private CardPPx cards;
    private ImageStorePPx ceoImageStore;
    private ImageStorePPx ceoSignatureImageStore;
    private CharityPPx charities;
    private CountryCodePPx countryCode;
    private EcardPPx ecards;
    private EmployeePPx employees;
    private HifiveQualityPPx hifiveQualities;
    private CardPPx imagineCard;
    private InspireAwardLevelLocationValuePPx inspireAwardLevelLocationValues;
    private AwardTypePPx inspireAwardType;
    private InspireCoreValuePPx inspireCoreValues;
    private LocationEmailTypePPx locationEmailTypes;
    private LocationPageGroupPPx locationPageGroups;
    private LocationPageInfoPPx locationPageInfos;
    private LocationPPx locations;
    private LocationTypePPx locationType;
    private ImageStorePPx logoImageStore;
    private ImageStorePPx logoStampImageStore;
    private QuizPPx nominationQuiz;
    private PageThemePPx pageTheme;
    private LocationPPx parentLocation;
    private PointsAwardLevelPPx pointsAwardLevels;
    private PointsCoreValuePPx pointsCoreValues;
    private ProgramPPx program;
    private ProgramEventPPx programEvents;
    private ProgramFaqPPx programFaqs;
     
    public LocationPPx(String name) {
        this(null, name);
    }

    public LocationPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public AddOnItemPPx addOnItems() {
        if (addOnItems == null) addOnItems = new AddOnItemPPx(this, Location.P_AddOnItems);
        return addOnItems;
    }

    public AddressPPx address() {
        if (address == null) address = new AddressPPx(this, Location.P_Address);
        return address;
    }

    public ProgramDocumentPPx announcementDocument() {
        if (announcementDocument == null) announcementDocument = new ProgramDocumentPPx(this, Location.P_AnnouncementDocument);
        return announcementDocument;
    }

    public AwardTypePPx awardTypes() {
        if (awardTypes == null) awardTypes = new AwardTypePPx(this, Location.P_AwardTypes);
        return awardTypes;
    }

    public CountryCodePPx calcCountryCode() {
        if (calcCountryCode == null) calcCountryCode = new CountryCodePPx(this, Location.P_CalcCountryCode);
        return calcCountryCode;
    }

    public ImageStorePPx calcLogoStampImageStore() {
        if (calcLogoStampImageStore == null) calcLogoStampImageStore = new ImageStorePPx(this, Location.P_CalcLogoStampImageStore);
        return calcLogoStampImageStore;
    }

    public CardPPx cards() {
        if (cards == null) cards = new CardPPx(this, Location.P_Cards);
        return cards;
    }

    public ImageStorePPx ceoImageStore() {
        if (ceoImageStore == null) ceoImageStore = new ImageStorePPx(this, Location.P_CeoImageStore);
        return ceoImageStore;
    }

    public ImageStorePPx ceoSignatureImageStore() {
        if (ceoSignatureImageStore == null) ceoSignatureImageStore = new ImageStorePPx(this, Location.P_CeoSignatureImageStore);
        return ceoSignatureImageStore;
    }

    public CharityPPx charities() {
        if (charities == null) charities = new CharityPPx(this, Location.P_Charities);
        return charities;
    }

    public CountryCodePPx countryCode() {
        if (countryCode == null) countryCode = new CountryCodePPx(this, Location.P_CountryCode);
        return countryCode;
    }

    public EcardPPx ecards() {
        if (ecards == null) ecards = new EcardPPx(this, Location.P_Ecards);
        return ecards;
    }

    public EmployeePPx employees() {
        if (employees == null) employees = new EmployeePPx(this, Location.P_Employees);
        return employees;
    }

    public HifiveQualityPPx hifiveQualities() {
        if (hifiveQualities == null) hifiveQualities = new HifiveQualityPPx(this, Location.P_HifiveQualities);
        return hifiveQualities;
    }

    public CardPPx imagineCard() {
        if (imagineCard == null) imagineCard = new CardPPx(this, Location.P_ImagineCard);
        return imagineCard;
    }

    public InspireAwardLevelLocationValuePPx inspireAwardLevelLocationValues() {
        if (inspireAwardLevelLocationValues == null) inspireAwardLevelLocationValues = new InspireAwardLevelLocationValuePPx(this, Location.P_InspireAwardLevelLocationValues);
        return inspireAwardLevelLocationValues;
    }

    public AwardTypePPx inspireAwardType() {
        if (inspireAwardType == null) inspireAwardType = new AwardTypePPx(this, Location.P_InspireAwardType);
        return inspireAwardType;
    }

    public InspireCoreValuePPx inspireCoreValues() {
        if (inspireCoreValues == null) inspireCoreValues = new InspireCoreValuePPx(this, Location.P_InspireCoreValues);
        return inspireCoreValues;
    }

    public LocationEmailTypePPx locationEmailTypes() {
        if (locationEmailTypes == null) locationEmailTypes = new LocationEmailTypePPx(this, Location.P_LocationEmailTypes);
        return locationEmailTypes;
    }

    public LocationPageGroupPPx locationPageGroups() {
        if (locationPageGroups == null) locationPageGroups = new LocationPageGroupPPx(this, Location.P_LocationPageGroups);
        return locationPageGroups;
    }

    public LocationPageInfoPPx locationPageInfos() {
        if (locationPageInfos == null) locationPageInfos = new LocationPageInfoPPx(this, Location.P_LocationPageInfos);
        return locationPageInfos;
    }

    public LocationPPx locations() {
        if (locations == null) locations = new LocationPPx(this, Location.P_Locations);
        return locations;
    }

    public LocationTypePPx locationType() {
        if (locationType == null) locationType = new LocationTypePPx(this, Location.P_LocationType);
        return locationType;
    }

    public ImageStorePPx logoImageStore() {
        if (logoImageStore == null) logoImageStore = new ImageStorePPx(this, Location.P_LogoImageStore);
        return logoImageStore;
    }

    public ImageStorePPx logoStampImageStore() {
        if (logoStampImageStore == null) logoStampImageStore = new ImageStorePPx(this, Location.P_LogoStampImageStore);
        return logoStampImageStore;
    }

    public QuizPPx nominationQuiz() {
        if (nominationQuiz == null) nominationQuiz = new QuizPPx(this, Location.P_NominationQuiz);
        return nominationQuiz;
    }

    public PageThemePPx pageTheme() {
        if (pageTheme == null) pageTheme = new PageThemePPx(this, Location.P_PageTheme);
        return pageTheme;
    }

    public LocationPPx parentLocation() {
        if (parentLocation == null) parentLocation = new LocationPPx(this, Location.P_ParentLocation);
        return parentLocation;
    }

    public PointsAwardLevelPPx pointsAwardLevels() {
        if (pointsAwardLevels == null) pointsAwardLevels = new PointsAwardLevelPPx(this, Location.P_PointsAwardLevels);
        return pointsAwardLevels;
    }

    public PointsCoreValuePPx pointsCoreValues() {
        if (pointsCoreValues == null) pointsCoreValues = new PointsCoreValuePPx(this, Location.P_PointsCoreValues);
        return pointsCoreValues;
    }

    public ProgramPPx program() {
        if (program == null) program = new ProgramPPx(this, Location.P_Program);
        return program;
    }

    public ProgramEventPPx programEvents() {
        if (programEvents == null) programEvents = new ProgramEventPPx(this, Location.P_ProgramEvents);
        return programEvents;
    }

    public ProgramFaqPPx programFaqs() {
        if (programFaqs == null) programFaqs = new ProgramFaqPPx(this, Location.P_ProgramFaqs);
        return programFaqs;
    }

    public String id() {
        return pp + "." + Location.P_Id;
    }

    public String created() {
        return pp + "." + Location.P_Created;
    }

    public String name() {
        return pp + "." + Location.P_Name;
    }

    public String name2() {
        return pp + "." + Location.P_Name2;
    }

    public String seq() {
        return pp + "." + Location.P_Seq;
    }

    public String code() {
        return pp + "." + Location.P_Code;
    }

    public String charityGoal() {
        return pp + "." + Location.P_CharityGoal;
    }

    public String fromEmailAddress() {
        return pp + "." + Location.P_FromEmailAddress;
    }

    public String testEmail() {
        return pp + "." + Location.P_TestEmail;
    }

    public String calcCharityTotal() {
        return pp + "." + Location.P_CalcCharityTotal;
    }

    public String deleteEmployees() {
        return pp + ".deleteEmployees";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import java.io.Serializable;

import test.hifive.model.oa.*;
 
public class PointsApprovalPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private PointsAwardLevelPPx approvedAwardLevel;
    private EmployeePPx employee;
    private PointsRequestPPx pointsRequest;
    private PointsAwardLevelPPx startingAwardLevel;
     
    public PointsApprovalPPx(String name) {
        this(null, name);
    }

    public PointsApprovalPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public PointsAwardLevelPPx approvedAwardLevel() {
        if (approvedAwardLevel == null) approvedAwardLevel = new PointsAwardLevelPPx(this, PointsApproval.P_ApprovedAwardLevel);
        return approvedAwardLevel;
    }

    public EmployeePPx employee() {
        if (employee == null) employee = new EmployeePPx(this, PointsApproval.P_Employee);
        return employee;
    }

    public PointsRequestPPx pointsRequest() {
        if (pointsRequest == null) pointsRequest = new PointsRequestPPx(this, PointsApproval.P_PointsRequest);
        return pointsRequest;
    }

    public PointsAwardLevelPPx startingAwardLevel() {
        if (startingAwardLevel == null) startingAwardLevel = new PointsAwardLevelPPx(this, PointsApproval.P_StartingAwardLevel);
        return startingAwardLevel;
    }

    public String id() {
        return pp + "." + PointsApproval.P_Id;
    }

    public String created() {
        return pp + "." + PointsApproval.P_Created;
    }

    public String status() {
        return pp + "." + PointsApproval.P_Status;
    }

    public String statusDate() {
        return pp + "." + PointsApproval.P_StatusDate;
    }

    public String comments() {
        return pp + "." + PointsApproval.P_Comments;
    }

    public String seq() {
        return pp + "." + PointsApproval.P_Seq;
    }

    public String approvedPoints() {
        return pp + "." + PointsApproval.P_ApprovedPoints;
    }

    public String startingPoints() {
        return pp + "." + PointsApproval.P_StartingPoints;
    }

    public String missingApproverFilter() {
        return pp + ":missingApprover()";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

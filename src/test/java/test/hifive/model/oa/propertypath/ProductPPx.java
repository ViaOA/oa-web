// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import java.io.Serializable;

import test.hifive.model.oa.*;
 
public class ProductPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private EmployeeAwardPPx addOnProductEmployeeAwards;
    private AwardTypePPx awardTypes;
    private EmployeeAwardPPx employeeAwards;
    private HifiveOrderItemPPx hifiveOrderItems;
    private InspireOrderItemPPx inspireOrderItems;
    private ItemPPx item;
    private ProductAuditPPx productAudits;
     
    public ProductPPx(String name) {
        this(null, name);
    }

    public ProductPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public EmployeeAwardPPx addOnProductEmployeeAwards() {
        if (addOnProductEmployeeAwards == null) addOnProductEmployeeAwards = new EmployeeAwardPPx(this, Product.P_AddOnProductEmployeeAwards);
        return addOnProductEmployeeAwards;
    }

    public AwardTypePPx awardTypes() {
        if (awardTypes == null) awardTypes = new AwardTypePPx(this, Product.P_AwardTypes);
        return awardTypes;
    }

    public EmployeeAwardPPx employeeAwards() {
        if (employeeAwards == null) employeeAwards = new EmployeeAwardPPx(this, Product.P_EmployeeAwards);
        return employeeAwards;
    }

    public HifiveOrderItemPPx hifiveOrderItems() {
        if (hifiveOrderItems == null) hifiveOrderItems = new HifiveOrderItemPPx(this, Product.P_HifiveOrderItems);
        return hifiveOrderItems;
    }

    public InspireOrderItemPPx inspireOrderItems() {
        if (inspireOrderItems == null) inspireOrderItems = new InspireOrderItemPPx(this, Product.P_InspireOrderItems);
        return inspireOrderItems;
    }

    public ItemPPx item() {
        if (item == null) item = new ItemPPx(this, Product.P_Item);
        return item;
    }

    public ProductAuditPPx productAudits() {
        if (productAudits == null) productAudits = new ProductAuditPPx(this, Product.P_ProductAudits);
        return productAudits;
    }

    public String id() {
        return pp + "." + Product.P_Id;
    }

    public String vendorCode() {
        return pp + "." + Product.P_VendorCode;
    }

    public String attribute() {
        return pp + "." + Product.P_Attribute;
    }

    public String cost() {
        return pp + "." + Product.P_Cost;
    }

    public String handlingCost() {
        return pp + "." + Product.P_HandlingCost;
    }

    public String shippingCost() {
        return pp + "." + Product.P_ShippingCost;
    }

    public String totalCost() {
        return pp + "." + Product.P_TotalCost;
    }

    public String discontinuedDate() {
        return pp + "." + Product.P_DiscontinuedDate;
    }

    public String discontinuedReason() {
        return pp + "." + Product.P_DiscontinuedReason;
    }

    public String lastUpdate() {
        return pp + "." + Product.P_LastUpdate;
    }

    public String msrp() {
        return pp + "." + Product.P_Msrp;
    }

    public String streetValue() {
        return pp + "." + Product.P_StreetValue;
    }

    public String activeFilter() {
        return pp + ":active()";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

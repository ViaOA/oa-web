// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import java.io.Serializable;

import test.hifive.model.oa.*;
 
public class ProgramDocumentPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private LocationPPx announcementLocation;
    private ProgramPPx announcementProgram;
    private AwardTypePPx awardType;
    private AwardTypePPx awardTypes;
    private ProgramPPx blogPrograms;
    private EmployeeAwardPPx employeeAward;
    private LocationPageInfoPPx locationPageInfo;
    private PageGroupPageInfoPPx pageGroupPageInfos;
    private PageThemePageInfoPPx pageThemePageInfo;
    private ProgramPageInfoPPx programPageInfo;
     
    public ProgramDocumentPPx(String name) {
        this(null, name);
    }

    public ProgramDocumentPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public LocationPPx announcementLocation() {
        if (announcementLocation == null) announcementLocation = new LocationPPx(this, ProgramDocument.P_AnnouncementLocation);
        return announcementLocation;
    }

    public ProgramPPx announcementProgram() {
        if (announcementProgram == null) announcementProgram = new ProgramPPx(this, ProgramDocument.P_AnnouncementProgram);
        return announcementProgram;
    }

    public AwardTypePPx awardType() {
        if (awardType == null) awardType = new AwardTypePPx(this, ProgramDocument.P_AwardType);
        return awardType;
    }

    public AwardTypePPx awardTypes() {
        if (awardTypes == null) awardTypes = new AwardTypePPx(this, ProgramDocument.P_AwardTypes);
        return awardTypes;
    }

    public ProgramPPx blogPrograms() {
        if (blogPrograms == null) blogPrograms = new ProgramPPx(this, ProgramDocument.P_BlogPrograms);
        return blogPrograms;
    }

    public EmployeeAwardPPx employeeAward() {
        if (employeeAward == null) employeeAward = new EmployeeAwardPPx(this, ProgramDocument.P_EmployeeAward);
        return employeeAward;
    }

    public LocationPageInfoPPx locationPageInfo() {
        if (locationPageInfo == null) locationPageInfo = new LocationPageInfoPPx(this, ProgramDocument.P_LocationPageInfo);
        return locationPageInfo;
    }

    public PageGroupPageInfoPPx pageGroupPageInfos() {
        if (pageGroupPageInfos == null) pageGroupPageInfos = new PageGroupPageInfoPPx(this, ProgramDocument.P_PageGroupPageInfos);
        return pageGroupPageInfos;
    }

    public PageThemePageInfoPPx pageThemePageInfo() {
        if (pageThemePageInfo == null) pageThemePageInfo = new PageThemePageInfoPPx(this, ProgramDocument.P_PageThemePageInfo);
        return pageThemePageInfo;
    }

    public ProgramPageInfoPPx programPageInfo() {
        if (programPageInfo == null) programPageInfo = new ProgramPageInfoPPx(this, ProgramDocument.P_ProgramPageInfo);
        return programPageInfo;
    }

    public String id() {
        return pp + "." + ProgramDocument.P_Id;
    }

    public String created() {
        return pp + "." + ProgramDocument.P_Created;
    }

    public String name() {
        return pp + "." + ProgramDocument.P_Name;
    }

    public String text() {
        return pp + "." + ProgramDocument.P_Text;
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

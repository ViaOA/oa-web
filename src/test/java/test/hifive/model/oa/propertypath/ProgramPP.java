// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import test.hifive.model.oa.*;
 
public class ProgramPP {
    private static AddOnItemPPx addOnItems;
    private static EmployeePPx anniversaryEmployees;
    private static ProgramDocumentPPx announcementDocument;
    private static AwardTypePPx awardTypes;
    private static ProgramDocumentPPx blogDocuments;
    private static CardPPx cards;
    private static ImageStorePPx ceoImageStore;
    private static ImageStorePPx ceoSignatureImageStore;
    private static CharityPPx charities;
    private static CompanyPPx company;
    private static CountryCodePPx countryCode;
    private static CustomDataPPx customData;
    private static EcardPPx ecards;
    private static EmployeePPx employees;
    private static HifiveQualityPPx hifiveQualities;
    private static HifiveReasonPPx hifiveReasons;
    private static ImageStorePPx imageStores;
    private static CardPPx imagineCard;
    private static InspireAwardLevelPPx inspireAwardLevels;
    private static AwardTypePPx inspireAwardType;
    private static InspireCoreValuePPx inspireCoreValues;
    private static LocationPPx locations;
    private static LoginImageSetPPx loginImageSet;
    private static ImageStorePPx logoImageStores;
    private static ImageStorePPx logoStampImageStore;
    private static SurveyPPx managerHifiveSurvey;
    private static QuizPPx nominationQuiz;
    private static PageThemePPx pageTheme;
    private static PointsAwardLevelPPx pointsAwardLevels;
    private static PointsConfigurationPPx pointsConfiguration;
    private static PointsCoreValuePPx pointsCoreValues;
    private static PointsRecordPPx pointsFromRecord;
    private static ProgramEmailTypePPx programEmailTypes;
    private static ProgramEventPPx programEvents;
    private static ProgramFaqPPx programFaqs;
    private static ProgramPageGroupPPx programPageGroups;
    private static ProgramPageInfoPPx programPageInfos;
    private static SurveyPPx quizSurveys;
    private static InspireRecipientPPx recentInspireRecipients;
    private static SurveyPPx surveys;
    private static WidgetPPx widgets;
     

    public static AddOnItemPPx addOnItems() {
        if (addOnItems == null) addOnItems = new AddOnItemPPx(Program.P_AddOnItems);
        return addOnItems;
    }

    public static EmployeePPx anniversaryEmployees() {
        if (anniversaryEmployees == null) anniversaryEmployees = new EmployeePPx(Program.P_AnniversaryEmployees);
        return anniversaryEmployees;
    }

    public static ProgramDocumentPPx announcementDocument() {
        if (announcementDocument == null) announcementDocument = new ProgramDocumentPPx(Program.P_AnnouncementDocument);
        return announcementDocument;
    }

    public static AwardTypePPx awardTypes() {
        if (awardTypes == null) awardTypes = new AwardTypePPx(Program.P_AwardTypes);
        return awardTypes;
    }

    public static ProgramDocumentPPx blogDocuments() {
        if (blogDocuments == null) blogDocuments = new ProgramDocumentPPx(Program.P_BlogDocuments);
        return blogDocuments;
    }

    public static CardPPx cards() {
        if (cards == null) cards = new CardPPx(Program.P_Cards);
        return cards;
    }

    public static ImageStorePPx ceoImageStore() {
        if (ceoImageStore == null) ceoImageStore = new ImageStorePPx(Program.P_CeoImageStore);
        return ceoImageStore;
    }

    public static ImageStorePPx ceoSignatureImageStore() {
        if (ceoSignatureImageStore == null) ceoSignatureImageStore = new ImageStorePPx(Program.P_CeoSignatureImageStore);
        return ceoSignatureImageStore;
    }

    public static CharityPPx charities() {
        if (charities == null) charities = new CharityPPx(Program.P_Charities);
        return charities;
    }

    public static CompanyPPx company() {
        if (company == null) company = new CompanyPPx(Program.P_Company);
        return company;
    }

    public static CountryCodePPx countryCode() {
        if (countryCode == null) countryCode = new CountryCodePPx(Program.P_CountryCode);
        return countryCode;
    }

    public static CustomDataPPx customData() {
        if (customData == null) customData = new CustomDataPPx(Program.P_CustomData);
        return customData;
    }

    public static EcardPPx ecards() {
        if (ecards == null) ecards = new EcardPPx(Program.P_Ecards);
        return ecards;
    }

    public static EmployeePPx employees() {
        if (employees == null) employees = new EmployeePPx(Program.P_Employees);
        return employees;
    }

    public static HifiveQualityPPx hifiveQualities() {
        if (hifiveQualities == null) hifiveQualities = new HifiveQualityPPx(Program.P_HifiveQualities);
        return hifiveQualities;
    }

    public static HifiveReasonPPx hifiveReasons() {
        if (hifiveReasons == null) hifiveReasons = new HifiveReasonPPx(Program.P_HifiveReasons);
        return hifiveReasons;
    }

    public static ImageStorePPx imageStores() {
        if (imageStores == null) imageStores = new ImageStorePPx(Program.P_ImageStores);
        return imageStores;
    }

    public static CardPPx imagineCard() {
        if (imagineCard == null) imagineCard = new CardPPx(Program.P_ImagineCard);
        return imagineCard;
    }

    public static InspireAwardLevelPPx inspireAwardLevels() {
        if (inspireAwardLevels == null) inspireAwardLevels = new InspireAwardLevelPPx(Program.P_InspireAwardLevels);
        return inspireAwardLevels;
    }

    public static AwardTypePPx inspireAwardType() {
        if (inspireAwardType == null) inspireAwardType = new AwardTypePPx(Program.P_InspireAwardType);
        return inspireAwardType;
    }

    public static InspireCoreValuePPx inspireCoreValues() {
        if (inspireCoreValues == null) inspireCoreValues = new InspireCoreValuePPx(Program.P_InspireCoreValues);
        return inspireCoreValues;
    }

    public static LocationPPx locations() {
        if (locations == null) locations = new LocationPPx(Program.P_Locations);
        return locations;
    }

    public static LoginImageSetPPx loginImageSet() {
        if (loginImageSet == null) loginImageSet = new LoginImageSetPPx(Program.P_LoginImageSet);
        return loginImageSet;
    }

    public static ImageStorePPx logoImageStores() {
        if (logoImageStores == null) logoImageStores = new ImageStorePPx(Program.P_LogoImageStores);
        return logoImageStores;
    }

    public static ImageStorePPx logoStampImageStore() {
        if (logoStampImageStore == null) logoStampImageStore = new ImageStorePPx(Program.P_LogoStampImageStore);
        return logoStampImageStore;
    }

    public static SurveyPPx managerHifiveSurvey() {
        if (managerHifiveSurvey == null) managerHifiveSurvey = new SurveyPPx(Program.P_ManagerHifiveSurvey);
        return managerHifiveSurvey;
    }

    public static QuizPPx nominationQuiz() {
        if (nominationQuiz == null) nominationQuiz = new QuizPPx(Program.P_NominationQuiz);
        return nominationQuiz;
    }

    public static PageThemePPx pageTheme() {
        if (pageTheme == null) pageTheme = new PageThemePPx(Program.P_PageTheme);
        return pageTheme;
    }

    public static PointsAwardLevelPPx pointsAwardLevels() {
        if (pointsAwardLevels == null) pointsAwardLevels = new PointsAwardLevelPPx(Program.P_PointsAwardLevels);
        return pointsAwardLevels;
    }

    public static PointsConfigurationPPx pointsConfiguration() {
        if (pointsConfiguration == null) pointsConfiguration = new PointsConfigurationPPx(Program.P_PointsConfiguration);
        return pointsConfiguration;
    }

    public static PointsCoreValuePPx pointsCoreValues() {
        if (pointsCoreValues == null) pointsCoreValues = new PointsCoreValuePPx(Program.P_PointsCoreValues);
        return pointsCoreValues;
    }

    public static PointsRecordPPx pointsFromRecord() {
        if (pointsFromRecord == null) pointsFromRecord = new PointsRecordPPx(Program.P_PointsFromRecord);
        return pointsFromRecord;
    }

    public static ProgramEmailTypePPx programEmailTypes() {
        if (programEmailTypes == null) programEmailTypes = new ProgramEmailTypePPx(Program.P_ProgramEmailTypes);
        return programEmailTypes;
    }

    public static ProgramEventPPx programEvents() {
        if (programEvents == null) programEvents = new ProgramEventPPx(Program.P_ProgramEvents);
        return programEvents;
    }

    public static ProgramFaqPPx programFaqs() {
        if (programFaqs == null) programFaqs = new ProgramFaqPPx(Program.P_ProgramFaqs);
        return programFaqs;
    }

    public static ProgramPageGroupPPx programPageGroups() {
        if (programPageGroups == null) programPageGroups = new ProgramPageGroupPPx(Program.P_ProgramPageGroups);
        return programPageGroups;
    }

    public static ProgramPageInfoPPx programPageInfos() {
        if (programPageInfos == null) programPageInfos = new ProgramPageInfoPPx(Program.P_ProgramPageInfos);
        return programPageInfos;
    }

    public static SurveyPPx quizSurveys() {
        if (quizSurveys == null) quizSurveys = new SurveyPPx(Program.P_QuizSurveys);
        return quizSurveys;
    }

    public static InspireRecipientPPx recentInspireRecipients() {
        if (recentInspireRecipients == null) recentInspireRecipients = new InspireRecipientPPx(Program.P_RecentInspireRecipients);
        return recentInspireRecipients;
    }

    public static SurveyPPx surveys() {
        if (surveys == null) surveys = new SurveyPPx(Program.P_Surveys);
        return surveys;
    }

    public static WidgetPPx widgets() {
        if (widgets == null) widgets = new WidgetPPx(Program.P_Widgets);
        return widgets;
    }

    public static String id() {
        String s = Program.P_Id;
        return s;
    }

    public static String created() {
        String s = Program.P_Created;
        return s;
    }

    public static String code() {
        String s = Program.P_Code;
        return s;
    }

    public static String name() {
        String s = Program.P_Name;
        return s;
    }

    public static String beginDate() {
        String s = Program.P_BeginDate;
        return s;
    }

    public static String endDate() {
        String s = Program.P_EndDate;
        return s;
    }

    public static String awardBeginDate() {
        String s = Program.P_AwardBeginDate;
        return s;
    }

    public static String inactiveDate() {
        String s = Program.P_InactiveDate;
        return s;
    }

    public static String urlName() {
        String s = Program.P_UrlName;
        return s;
    }

    public static String fromEmailAddress() {
        String s = Program.P_FromEmailAddress;
        return s;
    }

    public static String pointsName() {
        String s = Program.P_PointsName;
        return s;
    }

    public static String pointValue() {
        String s = Program.P_PointValue;
        return s;
    }

    public static String usesInspire() {
        String s = Program.P_UsesInspire;
        return s;
    }

    public static String usesHifive() {
        String s = Program.P_UsesHifive;
        return s;
    }

    public static String usesSurveys() {
        String s = Program.P_UsesSurveys;
        return s;
    }

    public static String ecardType() {
        String s = Program.P_EcardType;
        return s;
    }

    public static String hifiveName() {
        String s = Program.P_HifiveName;
        return s;
    }

    public static String birthdayDisplayDays() {
        String s = Program.P_BirthdayDisplayDays;
        return s;
    }

    public static String anniversaryDisplayDays() {
        String s = Program.P_AnniversaryDisplayDays;
        return s;
    }

    public static String seq() {
        String s = Program.P_Seq;
        return s;
    }

    public static String loginMessage() {
        String s = Program.P_LoginMessage;
        return s;
    }

    public static String employeeAwardExpireDays() {
        String s = Program.P_EmployeeAwardExpireDays;
        return s;
    }

    public static String charityGoal() {
        String s = Program.P_CharityGoal;
        return s;
    }

    public static String charityTotal() {
        String s = Program.P_CharityTotal;
        return s;
    }

    public static String itemUpcharge() {
        String s = Program.P_ItemUpcharge;
        return s;
    }

    public static String cardUpcharge() {
        String s = Program.P_CardUpcharge;
        return s;
    }

    public static String charityUpcharge() {
        String s = Program.P_CharityUpcharge;
        return s;
    }

    public static String cashUpcharge() {
        String s = Program.P_CashUpcharge;
        return s;
    }

    public static String testEmail() {
        String s = Program.P_TestEmail;
        return s;
    }

    public static String useAdvancedReports() {
        String s = Program.P_UseAdvancedReports;
        return s;
    }

    public static String packetInstructions() {
        String s = Program.P_PacketInstructions;
        return s;
    }

    public static String ssoFailureUrl() {
        String s = Program.P_SsoFailureUrl;
        return s;
    }

    public static String ssoCode() {
        String s = Program.P_SsoCode;
        return s;
    }

    public static String ssoRedirectUrl() {
        String s = Program.P_SsoRedirectUrl;
        return s;
    }

    public static String usesPoints() {
        String s = Program.P_UsesPoints;
        return s;
    }

    public static String pointsBillingType() {
        String s = Program.P_PointsBillingType;
        return s;
    }

    public static String ssoLogoutUrl() {
        String s = Program.P_SsoLogoutUrl;
        return s;
    }

    public static String usesPeerToPeer() {
        String s = Program.P_UsesPeerToPeer;
        return s;
    }

    public static String usesDiscretionary() {
        String s = Program.P_UsesDiscretionary;
        return s;
    }

    public static String employeeAwardDaysBefore() {
        String s = Program.P_EmployeeAwardDaysBefore;
        return s;
    }

    public static String companyPaysShipping() {
        String s = Program.P_CompanyPaysShipping;
        return s;
    }

    public static String usesNominations() {
        String s = Program.P_UsesNominations;
        return s;
    }

    public static String usesManagerToolkit() {
        String s = Program.P_UsesManagerToolkit;
        return s;
    }

    public static String calcCharityTotal() {
        String s = Program.P_CalcCharityTotal;
        return s;
    }

    public static String programPoints() {
        String s = Program.P_ProgramPoints;
        return s;
    }

    public static String runSqlServerImport() {
        String s = "runSqlServerImport";
        return s;
    }
}
 

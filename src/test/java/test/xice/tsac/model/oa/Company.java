// Generated by OABuilder
package test.xice.tsac.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;

import test.xice.tsac.model.oa.filter.*;
import test.xice.tsac.model.oa.propertypath.*;

import com.viaoa.annotation.*;
 
@OAClass(
    shortName = "com",
    displayName = "Company",
    displayProperty = "name",
    sortProperty = "name"
)
@OATable(
    indexes = {
        @OAIndex(name = "CompanyEnvironment", columns = { @OAIndexColumn(name = "EnvironmentId") }), 
        @OAIndex(name = "CompanyParentCompany", columns = { @OAIndexColumn(name = "ParentCompanyId") })
    }
)
public class Company extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_CompanyId = "CompanyId";
    public static final String P_CompanyId = "CompanyId";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
     
     
    public static final String PROPERTY_Companies = "Companies";
    public static final String P_Companies = "Companies";
    public static final String PROPERTY_Environment = "Environment";
    public static final String P_Environment = "Environment";
    public static final String PROPERTY_ParentCompany = "ParentCompany";
    public static final String P_ParentCompany = "ParentCompany";
    public static final String PROPERTY_Users = "Users";
    public static final String P_Users = "Users";
     
    protected int id;
    protected int companyId;
    protected String name;
     
    // Links to other objects.
    protected transient Hub<Company> hubCompanies;
    protected transient Environment environment;
    protected transient Company parentCompany;
    protected transient Hub<User> hubUsers;
     
    public Company() {
    }
     
    public Company(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5, isProcessed = true)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(displayName = "Company Id", displayLength = 7, columnLength = 5, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getCompanyId() {
        return companyId;
    }
    
    public void setCompanyId(int newValue) {
        fireBeforePropertyChange(P_CompanyId, this.companyId, newValue);
        int old = companyId;
        this.companyId = newValue;
        firePropertyChange(P_CompanyId, old, this.companyId);
    }
    @OAProperty(maxLength = 75, displayLength = 40, columnLength = 22, isProcessed = true)
    @OAColumn(maxLength = 75)
    public String getName() {
        return name;
    }
    
    public void setName(String newValue) {
        fireBeforePropertyChange(P_Name, this.name, newValue);
        String old = name;
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @OAMany(
        toClass = Company.class, 
        reverseName = Company.P_ParentCompany
    )
    public Hub<Company> getCompanies() {
        if (hubCompanies == null) {
            hubCompanies = (Hub<Company>) getHub(P_Companies);
        }
        return hubCompanies;
    }
    
    @OAOne(
        reverseName = Environment.P_Companies, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"EnvironmentId"})
    public Environment getEnvironment() {
        if (environment == null) {
            environment = (Environment) getObject(P_Environment);
        }
        return environment;
    }
    
    public void setEnvironment(Environment newValue) {
        fireBeforePropertyChange(P_Environment, this.environment, newValue);
        Environment old = this.environment;
        this.environment = newValue;
        firePropertyChange(P_Environment, old, this.environment);
    }
    
    @OAOne(
        displayName = "Company Parent", 
        reverseName = Company.P_Companies, 
        allowCreateNew = false, 
        allowAddExisting = false
    )
    @OAFkey(columns = {"ParentCompanyId"})
    public Company getParentCompany() {
        if (parentCompany == null) {
            parentCompany = (Company) getObject(P_ParentCompany);
        }
        return parentCompany;
    }
    
    public void setParentCompany(Company newValue) {
        fireBeforePropertyChange(P_ParentCompany, this.parentCompany, newValue);
        Company old = this.parentCompany;
        this.parentCompany = newValue;
        firePropertyChange(P_ParentCompany, old, this.parentCompany);
    }
    
    @OAMany(
        toClass = User.class, 
        reverseName = User.P_Company
    )
    public Hub<User> getUsers() {
        if (hubUsers == null) {
            hubUsers = (Hub<User>) getHub(P_Users);
        }
        return hubUsers;
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.companyId = (int) rs.getInt(2);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, Company.P_CompanyId, true);
        }
        this.name = rs.getString(3);
        int environmentFkey = rs.getInt(4);
        if (!rs.wasNull() && environmentFkey > 0) {
            setProperty(P_Environment, new OAObjectKey(environmentFkey));
        }
        int parentCompanyFkey = rs.getInt(5);
        if (!rs.wasNull() && parentCompanyFkey > 0) {
            setProperty(P_ParentCompany, new OAObjectKey(parentCompanyFkey));
        }
        if (rs.getMetaData().getColumnCount() != 5) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

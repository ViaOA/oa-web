// Generated by OABuilder
package test.xice.tsac.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADateTime;

import test.xice.tsac.model.oa.filter.*;
import test.xice.tsac.model.oa.propertypath.*;

import com.viaoa.util.OADate;
 
@OAClass(
    shortName = "idl",
    displayName = "IDL",
    isLookup = true,
    isPreSelect = true,
    displayProperty = "version",
    sortProperty = "seq"
)
@OATable(
)
public class IDL extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Created = "Created";
    public static final String P_Created = "Created";
    public static final String PROPERTY_Version = "Version";
    public static final String P_Version = "Version";
    public static final String PROPERTY_ReleaseDate = "ReleaseDate";
    public static final String P_ReleaseDate = "ReleaseDate";
    public static final String PROPERTY_Seq = "Seq";
    public static final String P_Seq = "Seq";
     
     
    public static final String PROPERTY_Environments = "Environments";
    public static final String P_Environments = "Environments";
    public static final String PROPERTY_PackageVersions = "PackageVersions";
    public static final String P_PackageVersions = "PackageVersions";
     
    protected int id;
    protected OADateTime created;
    protected String version;
    protected OADate releaseDate;
    protected int seq;
     
    // Links to other objects.
    protected transient Hub<Environment> hubEnvironments;
     
    public IDL() {
        if (!isLoading()) {
            setCreated(new OADateTime());
        }
    }
     
    public IDL(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(defaultValue = "new OADateTime()", displayLength = 15, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.TIMESTAMP)
    public OADateTime getCreated() {
        return created;
    }
    
    public void setCreated(OADateTime newValue) {
        fireBeforePropertyChange(P_Created, this.created, newValue);
        OADateTime old = created;
        this.created = newValue;
        firePropertyChange(P_Created, old, this.created);
    }
    @OAProperty(maxLength = 25, displayLength = 12, columnLength = 10)
    @OAColumn(maxLength = 25)
    public String getVersion() {
        return version;
    }
    
    public void setVersion(String newValue) {
        fireBeforePropertyChange(P_Version, this.version, newValue);
        String old = version;
        this.version = newValue;
        firePropertyChange(P_Version, old, this.version);
    }
    @OAProperty(displayName = "Release Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getReleaseDate() {
        return releaseDate;
    }
    
    public void setReleaseDate(OADate newValue) {
        fireBeforePropertyChange(P_ReleaseDate, this.releaseDate, newValue);
        OADate old = releaseDate;
        this.releaseDate = newValue;
        firePropertyChange(P_ReleaseDate, old, this.releaseDate);
    }
    @OAProperty(displayLength = 5, isAutoSeq = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getSeq() {
        return seq;
    }
    
    public void setSeq(int newValue) {
        fireBeforePropertyChange(P_Seq, this.seq, newValue);
        int old = seq;
        this.seq = newValue;
        firePropertyChange(P_Seq, old, this.seq);
    }
    @OAMany(
        toClass = Environment.class, 
        reverseName = Environment.P_IDL
    )
    public Hub<Environment> getEnvironments() {
        if (hubEnvironments == null) {
            hubEnvironments = (Hub<Environment>) getHub(P_Environments);
        }
        return hubEnvironments;
    }
    
    @OAMany(
        displayName = "Package Versions", 
        toClass = PackageVersion.class, 
        reverseName = PackageVersion.P_IDL, 
        createMethod = false
    )
    private Hub<PackageVersion> getPackageVersions() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        java.sql.Timestamp timestamp;
        timestamp = rs.getTimestamp(2);
        if (timestamp != null) this.created = new OADateTime(timestamp);
        this.version = rs.getString(3);
        java.sql.Date date;
        date = rs.getDate(4);
        if (date != null) this.releaseDate = new OADate(date);
        this.seq = (int) rs.getInt(5);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, IDL.P_Seq, true);
        }
        if (rs.getMetaData().getColumnCount() != 5) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

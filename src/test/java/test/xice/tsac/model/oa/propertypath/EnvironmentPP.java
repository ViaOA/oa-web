// Generated by OABuilder
package test.xice.tsac.model.oa.propertypath;
 
import test.xice.tsac.model.oa.*;
 
public class EnvironmentPP {
    private static CompanyPPx companies;
    private static EnvironmentTypePPx environmentType;
    private static IDLPPx idL;
    private static MarketTypePPx marketTypes;
    private static MRADServerPPx mradServer;
    private static RCDeployPPx rcDeploy;
    private static RCInstalledVersionPPx rcInstalledVersions;
    private static RCPackageListPPx rcPackageLists;
    private static RCRepoVersionPPx rcRepoVersions;
    private static RCServerListPPx rcServerLists;
    private static RCServiceListPPx rcServiceLists;
    private static SiloPPx silos;
    private static SitePPx site;
     

    public static CompanyPPx companies() {
        if (companies == null) companies = new CompanyPPx(Environment.P_Companies);
        return companies;
    }

    public static EnvironmentTypePPx environmentType() {
        if (environmentType == null) environmentType = new EnvironmentTypePPx(Environment.P_EnvironmentType);
        return environmentType;
    }

    public static IDLPPx idL() {
        if (idL == null) idL = new IDLPPx(Environment.P_IDL);
        return idL;
    }

    public static MarketTypePPx marketTypes() {
        if (marketTypes == null) marketTypes = new MarketTypePPx(Environment.P_MarketTypes);
        return marketTypes;
    }

    public static MRADServerPPx mradServer() {
        if (mradServer == null) mradServer = new MRADServerPPx(Environment.P_MRADServer);
        return mradServer;
    }

    public static RCDeployPPx rcDeploy() {
        if (rcDeploy == null) rcDeploy = new RCDeployPPx(Environment.P_RCDeploy);
        return rcDeploy;
    }

    public static RCInstalledVersionPPx rcInstalledVersions() {
        if (rcInstalledVersions == null) rcInstalledVersions = new RCInstalledVersionPPx(Environment.P_RCInstalledVersions);
        return rcInstalledVersions;
    }

    public static RCPackageListPPx rcPackageLists() {
        if (rcPackageLists == null) rcPackageLists = new RCPackageListPPx(Environment.P_RCPackageLists);
        return rcPackageLists;
    }

    public static RCRepoVersionPPx rcRepoVersions() {
        if (rcRepoVersions == null) rcRepoVersions = new RCRepoVersionPPx(Environment.P_RCRepoVersions);
        return rcRepoVersions;
    }

    public static RCServerListPPx rcServerLists() {
        if (rcServerLists == null) rcServerLists = new RCServerListPPx(Environment.P_RCServerLists);
        return rcServerLists;
    }

    public static RCServiceListPPx rcServiceLists() {
        if (rcServiceLists == null) rcServiceLists = new RCServiceListPPx(Environment.P_RCServiceLists);
        return rcServiceLists;
    }

    public static SiloPPx silos() {
        if (silos == null) silos = new SiloPPx(Environment.P_Silos);
        return silos;
    }

    public static SitePPx site() {
        if (site == null) site = new SitePPx(Environment.P_Site);
        return site;
    }

    public static String id() {
        String s = Environment.P_Id;
        return s;
    }

    public static String name() {
        String s = Environment.P_Name;
        return s;
    }

    public static String abbrevName() {
        String s = Environment.P_AbbrevName;
        return s;
    }

    public static String teAbbrevName() {
        String s = Environment.P_TEAbbrevName;
        return s;
    }

    public static String usesDNS() {
        String s = Environment.P_UsesDNS;
        return s;
    }

    public static String usesFirewall() {
        String s = Environment.P_UsesFirewall;
        return s;
    }

    public static String usesVip() {
        String s = Environment.P_UsesVip;
        return s;
    }

    public static String envImport() {
        String s = "envImport";
        return s;
    }

    public static String envExport() {
        String s = "envExport";
        return s;
    }

    public static String mradminImport() {
        String s = "mradminImport";
        return s;
    }
}
 

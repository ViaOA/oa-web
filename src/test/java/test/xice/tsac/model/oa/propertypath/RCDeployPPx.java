// Generated by OABuilder
package test.xice.tsac.model.oa.propertypath;
 
import java.io.Serializable;

import test.xice.tsac.model.oa.*;
 
public class RCDeployPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
     
    public RCDeployPPx(String name) {
        this(null, name);
    }

    public RCDeployPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null && name.length() > 0) {
            if (s.length() > 0 && name.charAt(0) != ':') s += ".";
            s += name;
        }
        pp = s;
    }

    public EnvironmentPPx environment() {
        EnvironmentPPx ppx = new EnvironmentPPx(this, RCDeploy.P_Environment);
        return ppx;
    }

    public RCDeployDetailPPx rcDeployDetails() {
        RCDeployDetailPPx ppx = new RCDeployDetailPPx(this, RCDeploy.P_RCDeployDetails);
        return ppx;
    }

    public RCDownloadPPx rcDownload() {
        RCDownloadPPx ppx = new RCDownloadPPx(this, RCDeploy.P_RCDownload);
        return ppx;
    }

    public RCInstallPPx rcInstall() {
        RCInstallPPx ppx = new RCInstallPPx(this, RCDeploy.P_RCInstall);
        return ppx;
    }

    public RCStagePPx rcStage() {
        RCStagePPx ppx = new RCStagePPx(this, RCDeploy.P_RCStage);
        return ppx;
    }

    public RCStartPPx rcStart() {
        RCStartPPx ppx = new RCStartPPx(this, RCDeploy.P_RCStart);
        return ppx;
    }

    public RCStopPPx rcStop() {
        RCStopPPx ppx = new RCStopPPx(this, RCDeploy.P_RCStop);
        return ppx;
    }

    public RCVerifyPPx rcVerify() {
        RCVerifyPPx ppx = new RCVerifyPPx(this, RCDeploy.P_RCVerify);
        return ppx;
    }

    public String id() {
        return pp + "." + RCDeploy.P_Id;
    }

    public String created() {
        return pp + "." + RCDeploy.P_Created;
    }

    public String console() {
        return pp + "." + RCDeploy.P_Console;
    }

    public String initialize() {
        return pp + ".initialize";
    }

    public String download() {
        return pp + ".download";
    }

    public String stage() {
        return pp + ".stage";
    }

    public String stop() {
        return pp + ".stop";
    }

    public String install() {
        return pp + ".install";
    }

    public String verify() {
        return pp + ".verify";
    }

    public String start() {
        return pp + ".start";
    }

    public String envImport() {
        return pp + ".envImport";
    }

    public String envExport() {
        return pp + ".envExport";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

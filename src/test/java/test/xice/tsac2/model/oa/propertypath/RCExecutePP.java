// Generated by OABuilder
package test.xice.tsac2.model.oa.propertypath;
 
import test.xice.tsac2.model.oa.*;
 
public class RCExecutePP {
    private static RCCommandPPx rcCommand;
    private static RCInstalledVersionPPx rcInstalledVersions;
    private static RCPackageListPPx rcPackageLists;
    private static RCRepoVersionPPx rcRepoVersions;
    private static RCServerListPPx rcServerLists;
    private static RCServiceListPPx rcServiceLists;
    private static RemoteClientPPx remoteClient;
     

    public static RCCommandPPx rcCommand() {
        if (rcCommand == null) rcCommand = new RCCommandPPx(RCExecute.P_RCCommand);
        return rcCommand;
    }

    public static RCInstalledVersionPPx rcInstalledVersions() {
        if (rcInstalledVersions == null) rcInstalledVersions = new RCInstalledVersionPPx(RCExecute.P_RCInstalledVersions);
        return rcInstalledVersions;
    }

    public static RCPackageListPPx rcPackageLists() {
        if (rcPackageLists == null) rcPackageLists = new RCPackageListPPx(RCExecute.P_RCPackageLists);
        return rcPackageLists;
    }

    public static RCRepoVersionPPx rcRepoVersions() {
        if (rcRepoVersions == null) rcRepoVersions = new RCRepoVersionPPx(RCExecute.P_RCRepoVersions);
        return rcRepoVersions;
    }

    public static RCServerListPPx rcServerLists() {
        if (rcServerLists == null) rcServerLists = new RCServerListPPx(RCExecute.P_RCServerLists);
        return rcServerLists;
    }

    public static RCServiceListPPx rcServiceLists() {
        if (rcServiceLists == null) rcServiceLists = new RCServiceListPPx(RCExecute.P_RCServiceLists);
        return rcServiceLists;
    }

    public static RemoteClientPPx remoteClient() {
        if (remoteClient == null) remoteClient = new RemoteClientPPx(RCExecute.P_RemoteClient);
        return remoteClient;
    }

    public static String id() {
        String s = RCExecute.P_Id;
        return s;
    }

    public static String created() {
        String s = RCExecute.P_Created;
        return s;
    }

    public static String started() {
        String s = RCExecute.P_Started;
        return s;
    }

    public static String completed() {
        String s = RCExecute.P_Completed;
        return s;
    }

    public static String commandLine() {
        String s = RCExecute.P_CommandLine;
        return s;
    }

    public static String configFileName() {
        String s = RCExecute.P_ConfigFileName;
        return s;
    }

    public static String input() {
        String s = RCExecute.P_Input;
        return s;
    }

    public static String output() {
        String s = RCExecute.P_Output;
        return s;
    }

    public static String error() {
        String s = RCExecute.P_Error;
        return s;
    }

    public static String console() {
        String s = RCExecute.P_Console;
        return s;
    }

    public static String processed() {
        String s = RCExecute.P_Processed;
        return s;
    }

    public static String processingOutput() {
        String s = RCExecute.P_ProcessingOutput;
        return s;
    }

    public static String loaded() {
        String s = RCExecute.P_Loaded;
        return s;
    }

    public static String canRun() {
        String s = RCExecute.P_CanRun;
        return s;
    }

    public static String run() {
        String s = "run";
        return s;
    }
}
 

// Generated by OABuilder
package test.xice.tsac3.model.oa.propertypath;
 
import test.xice.tsac3.model.oa.*;
 
public class ServerPP {
    private static GSMRClientPPx gsmrClients;
    private static GSMRServerPPx gsmrServer;
    private static LLADClientPPx lladClient;
    private static LLADServerPPx lladServer;
    private static MRADClientPPx mradClient;
    private static MRADServerPPx mradServer;
    private static RCInstalledVersionDetailPPx rcInstalledVersionDetails;
    private static ServerFilePPx serverFiles;
    private static ServerInstallPPx serverInstalls;
    private static ServerStatusPPx serverStatus;
    private static ServerTypePPx serverType;
    private static ServerTypeVersionPPx serverTypeVersion;
    private static SiloPPx silo;
    private static WarningPPx warnings;
     

    public static GSMRClientPPx gsmrClients() {
        if (gsmrClients == null) gsmrClients = new GSMRClientPPx(Server.P_GSMRClients);
        return gsmrClients;
    }

    public static GSMRServerPPx gsmrServer() {
        if (gsmrServer == null) gsmrServer = new GSMRServerPPx(Server.P_GSMRServer);
        return gsmrServer;
    }

    public static LLADClientPPx lladClient() {
        if (lladClient == null) lladClient = new LLADClientPPx(Server.P_LLADClient);
        return lladClient;
    }

    public static LLADServerPPx lladServer() {
        if (lladServer == null) lladServer = new LLADServerPPx(Server.P_LLADServer);
        return lladServer;
    }

    public static MRADClientPPx mradClient() {
        if (mradClient == null) mradClient = new MRADClientPPx(Server.P_MRADClient);
        return mradClient;
    }

    public static MRADServerPPx mradServer() {
        if (mradServer == null) mradServer = new MRADServerPPx(Server.P_MRADServer);
        return mradServer;
    }

    public static RCInstalledVersionDetailPPx rcInstalledVersionDetails() {
        if (rcInstalledVersionDetails == null) rcInstalledVersionDetails = new RCInstalledVersionDetailPPx(Server.P_RCInstalledVersionDetails);
        return rcInstalledVersionDetails;
    }

    public static ServerFilePPx serverFiles() {
        if (serverFiles == null) serverFiles = new ServerFilePPx(Server.P_ServerFiles);
        return serverFiles;
    }

    public static ServerInstallPPx serverInstalls() {
        if (serverInstalls == null) serverInstalls = new ServerInstallPPx(Server.P_ServerInstalls);
        return serverInstalls;
    }

    public static ServerStatusPPx serverStatus() {
        if (serverStatus == null) serverStatus = new ServerStatusPPx(Server.P_ServerStatus);
        return serverStatus;
    }

    public static ServerTypePPx serverType() {
        if (serverType == null) serverType = new ServerTypePPx(Server.P_ServerType);
        return serverType;
    }

    public static ServerTypeVersionPPx serverTypeVersion() {
        if (serverTypeVersion == null) serverTypeVersion = new ServerTypeVersionPPx(Server.P_ServerTypeVersion);
        return serverTypeVersion;
    }

    public static SiloPPx silo() {
        if (silo == null) silo = new SiloPPx(Server.P_Silo);
        return silo;
    }

    public static WarningPPx warnings() {
        if (warnings == null) warnings = new WarningPPx(Server.P_Warnings);
        return warnings;
    }

    public static String id() {
        String s = Server.P_Id;
        return s;
    }

    public static String created() {
        String s = Server.P_Created;
        return s;
    }

    public static String lastStart() {
        String s = Server.P_LastStart;
        return s;
    }

    public static String name() {
        String s = Server.P_Name;
        return s;
    }

    public static String hostName() {
        String s = Server.P_HostName;
        return s;
    }

    public static String ipAddress() {
        String s = Server.P_IpAddress;
        return s;
    }

    public static String dnsName() {
        String s = Server.P_DnsName;
        return s;
    }

    public static String shortDnsName() {
        String s = Server.P_ShortDnsName;
        return s;
    }

    public static String serverId() {
        String s = Server.P_ServerId;
        return s;
    }

    public static String started() {
        String s = Server.P_Started;
        return s;
    }

    public static String serverFromId() {
        String s = Server.P_ServerFromId;
        return s;
    }

    public static String verifiedVersion() {
        String s = Server.P_VerifiedVersion;
        return s;
    }

    public static String installed() {
        String s = Server.P_Installed;
        return s;
    }

    public static String displayName() {
        String s = Server.P_DisplayName;
        return s;
    }
}
 

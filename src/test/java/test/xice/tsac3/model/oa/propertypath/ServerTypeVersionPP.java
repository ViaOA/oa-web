// Generated by OABuilder
package test.xice.tsac3.model.oa.propertypath;
 
import test.xice.tsac3.model.oa.*;
 
public class ServerTypeVersionPP {
    private static EnvironmentServerTypePPx environmentServerTypes;
    private static IDLPPx idL;
    private static RCInstalledVersionDetailPPx rcInstalledVersionDetails;
    private static ServerInstallPPx serverInstalls;
    private static ServerPPx servers;
    private static ServerTypePPx serverType;
    private static ServerTypeClientVersionPPx serverTypeClientVersions;
    private static ServerTypeClientVersionPPx serverTypeClientVersions2;
    private static SiloServerInfoPPx siloServerInfos;
     

    public static EnvironmentServerTypePPx environmentServerTypes() {
        if (environmentServerTypes == null) environmentServerTypes = new EnvironmentServerTypePPx(ServerTypeVersion.P_EnvironmentServerTypes);
        return environmentServerTypes;
    }

    public static IDLPPx idL() {
        if (idL == null) idL = new IDLPPx(ServerTypeVersion.P_IDL);
        return idL;
    }

    public static RCInstalledVersionDetailPPx rcInstalledVersionDetails() {
        if (rcInstalledVersionDetails == null) rcInstalledVersionDetails = new RCInstalledVersionDetailPPx(ServerTypeVersion.P_RCInstalledVersionDetails);
        return rcInstalledVersionDetails;
    }

    public static ServerInstallPPx serverInstalls() {
        if (serverInstalls == null) serverInstalls = new ServerInstallPPx(ServerTypeVersion.P_ServerInstalls);
        return serverInstalls;
    }

    public static ServerPPx servers() {
        if (servers == null) servers = new ServerPPx(ServerTypeVersion.P_Servers);
        return servers;
    }

    public static ServerTypePPx serverType() {
        if (serverType == null) serverType = new ServerTypePPx(ServerTypeVersion.P_ServerType);
        return serverType;
    }

    public static ServerTypeClientVersionPPx serverTypeClientVersions() {
        if (serverTypeClientVersions == null) serverTypeClientVersions = new ServerTypeClientVersionPPx(ServerTypeVersion.P_ServerTypeClientVersions);
        return serverTypeClientVersions;
    }

    public static ServerTypeClientVersionPPx serverTypeClientVersions2() {
        if (serverTypeClientVersions2 == null) serverTypeClientVersions2 = new ServerTypeClientVersionPPx(ServerTypeVersion.P_ServerTypeClientVersions2);
        return serverTypeClientVersions2;
    }

    public static SiloServerInfoPPx siloServerInfos() {
        if (siloServerInfos == null) siloServerInfos = new SiloServerInfoPPx(ServerTypeVersion.P_SiloServerInfos);
        return siloServerInfos;
    }

    public static String id() {
        String s = ServerTypeVersion.P_Id;
        return s;
    }

    public static String created() {
        String s = ServerTypeVersion.P_Created;
        return s;
    }

    public static String version() {
        String s = ServerTypeVersion.P_Version;
        return s;
    }

    public static String clientVersion() {
        String s = ServerTypeVersion.P_ClientVersion;
        return s;
    }

    public static String verifiedInRepo() {
        String s = ServerTypeVersion.P_VerifiedInRepo;
        return s;
    }

    public static String downloadedPom() {
        String s = ServerTypeVersion.P_DownloadedPom;
        return s;
    }

    public static String downloadedZip() {
        String s = ServerTypeVersion.P_DownloadedZip;
        return s;
    }
}
 

// Generated by OABuilder
package test.xice.tsac3.model.oa.propertypath;
 
import java.io.Serializable;

import test.xice.tsac3.model.oa.*;
 
public class ServerTypeVersionPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private EnvironmentServerTypePPx environmentServerTypes;
    private IDLPPx idL;
    private RCInstalledVersionDetailPPx rcInstalledVersionDetails;
    private ServerInstallPPx serverInstalls;
    private ServerPPx servers;
    private ServerTypePPx serverType;
    private ServerTypeClientVersionPPx serverTypeClientVersions;
    private ServerTypeClientVersionPPx serverTypeClientVersions2;
    private SiloServerInfoPPx siloServerInfos;
     
    public ServerTypeVersionPPx(String name) {
        this(null, name);
    }

    public ServerTypeVersionPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public EnvironmentServerTypePPx environmentServerTypes() {
        if (environmentServerTypes == null) environmentServerTypes = new EnvironmentServerTypePPx(this, ServerTypeVersion.P_EnvironmentServerTypes);
        return environmentServerTypes;
    }

    public IDLPPx idL() {
        if (idL == null) idL = new IDLPPx(this, ServerTypeVersion.P_IDL);
        return idL;
    }

    public RCInstalledVersionDetailPPx rcInstalledVersionDetails() {
        if (rcInstalledVersionDetails == null) rcInstalledVersionDetails = new RCInstalledVersionDetailPPx(this, ServerTypeVersion.P_RCInstalledVersionDetails);
        return rcInstalledVersionDetails;
    }

    public ServerInstallPPx serverInstalls() {
        if (serverInstalls == null) serverInstalls = new ServerInstallPPx(this, ServerTypeVersion.P_ServerInstalls);
        return serverInstalls;
    }

    public ServerPPx servers() {
        if (servers == null) servers = new ServerPPx(this, ServerTypeVersion.P_Servers);
        return servers;
    }

    public ServerTypePPx serverType() {
        if (serverType == null) serverType = new ServerTypePPx(this, ServerTypeVersion.P_ServerType);
        return serverType;
    }

    public ServerTypeClientVersionPPx serverTypeClientVersions() {
        if (serverTypeClientVersions == null) serverTypeClientVersions = new ServerTypeClientVersionPPx(this, ServerTypeVersion.P_ServerTypeClientVersions);
        return serverTypeClientVersions;
    }

    public ServerTypeClientVersionPPx serverTypeClientVersions2() {
        if (serverTypeClientVersions2 == null) serverTypeClientVersions2 = new ServerTypeClientVersionPPx(this, ServerTypeVersion.P_ServerTypeClientVersions2);
        return serverTypeClientVersions2;
    }

    public SiloServerInfoPPx siloServerInfos() {
        if (siloServerInfos == null) siloServerInfos = new SiloServerInfoPPx(this, ServerTypeVersion.P_SiloServerInfos);
        return siloServerInfos;
    }

    public String id() {
        return pp + "." + ServerTypeVersion.P_Id;
    }

    public String created() {
        return pp + "." + ServerTypeVersion.P_Created;
    }

    public String version() {
        return pp + "." + ServerTypeVersion.P_Version;
    }

    public String clientVersion() {
        return pp + "." + ServerTypeVersion.P_ClientVersion;
    }

    public String verifiedInRepo() {
        return pp + "." + ServerTypeVersion.P_VerifiedInRepo;
    }

    public String downloadedPom() {
        return pp + "." + ServerTypeVersion.P_DownloadedPom;
    }

    public String downloadedZip() {
        return pp + "." + ServerTypeVersion.P_DownloadedZip;
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

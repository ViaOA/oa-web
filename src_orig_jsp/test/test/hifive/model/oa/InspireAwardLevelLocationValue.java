// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;

import com.viaoa.annotation.*;
 
@OAClass(
    shortName = "iallv",
    displayName = "Inspire Award Level Location Value",
    displayProperty = "inspireAwardLevel.name",
    sortProperty = "inspireAwardLevel.seq"
)
@OATable(
    indexes = {
        @OAIndex(name = "InspireAwardLevelLocationValueLocation", columns = { @OAIndexColumn(name = "LocationId") })
    }
)
public class InspireAwardLevelLocationValue extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Points = "Points";
    public static final String P_Points = "Points";
     
     
    public static final String PROPERTY_Employee = "Employee";
    public static final String P_Employee = "Employee";
    public static final String PROPERTY_InspireAwardLevel = "InspireAwardLevel";
    public static final String P_InspireAwardLevel = "InspireAwardLevel";
    public static final String PROPERTY_InspireRecipients = "InspireRecipients";
    public static final String P_InspireRecipients = "InspireRecipients";
    public static final String PROPERTY_Location = "Location";
    public static final String P_Location = "Location";
     
    protected int id;
    protected double points;
     
    // Links to other objects.
    protected transient InspireAwardLevel inspireAwardLevel;
    protected transient Location location;
     
    public InspireAwardLevelLocationValue() {
    }
     
    public InspireAwardLevelLocationValue(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(decimalPlaces = 2, displayLength = 7)
    @OAColumn(sqlType = java.sql.Types.DOUBLE)
    public double getPoints() {
        return points;
    }
    
    public void setPoints(double newValue) {
        fireBeforePropertyChange(P_Points, this.points, newValue);
        double old = points;
        this.points = newValue;
        firePropertyChange(P_Points, old, this.points);
    }
    @OAOne(
        isCalculated = true, 
        reverseName = Employee.P_InspireAwardLevelLocationValues, 
        allowCreateNew = false, 
        allowAddExisting = false
    )
    private Employee getEmployee() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAOne(
        displayName = "Inspire Award Level", 
        reverseName = InspireAwardLevel.P_InspireAwardLevelLocationValues, 
        required = true, 
        allowCreateNew = false, 
        allowAddExisting = false
    )
    @OAFkey(columns = {"InspireAwardLevelId"})
    public InspireAwardLevel getInspireAwardLevel() {
        if (inspireAwardLevel == null) {
            inspireAwardLevel = (InspireAwardLevel) getObject(P_InspireAwardLevel);
        }
        return inspireAwardLevel;
    }
    
    public void setInspireAwardLevel(InspireAwardLevel newValue) {
        fireBeforePropertyChange(P_InspireAwardLevel, this.inspireAwardLevel, newValue);
        InspireAwardLevel old = this.inspireAwardLevel;
        this.inspireAwardLevel = newValue;
        firePropertyChange(P_InspireAwardLevel, old, this.inspireAwardLevel);
    }
    
    @OAMany(
        displayName = "Inspire Recipients", 
        toClass = InspireRecipient.class, 
        reverseName = InspireRecipient.P_InspireAwardLevelLocationValue, 
        createMethod = false
    )
    private Hub<InspireRecipient> getInspireRecipients() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAOne(
        reverseName = Location.P_InspireAwardLevelLocationValues, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"LocationId"})
    public Location getLocation() {
        if (location == null) {
            location = (Location) getObject(P_Location);
        }
        return location;
    }
    
    public void setLocation(Location newValue) {
        fireBeforePropertyChange(P_Location, this.location, newValue);
        Location old = this.location;
        this.location = newValue;
        firePropertyChange(P_Location, old, this.location);
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.points = (double) rs.getDouble(2);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, InspireAwardLevelLocationValue.P_Points, true);
        }
        int inspireAwardLevelFkey = rs.getInt(3);
        if (!rs.wasNull() && inspireAwardLevelFkey > 0) {
            setProperty(P_InspireAwardLevel, new OAObjectKey(inspireAwardLevelFkey));
        }
        int locationFkey = rs.getInt(4);
        if (!rs.wasNull() && locationFkey > 0) {
            setProperty(P_Location, new OAObjectKey(locationFkey));
        }
        if (rs.getMetaData().getColumnCount() != 4) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADate;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;
 
@OAClass(
    shortName = "ic",
    displayName = "Item Category",
    isLookup = true,
    isPreSelect = true,
    displayProperty = "name"
)
@OATable(
    indexes = {
        @OAIndex(name = "ItemCategoryCode", columns = {@OAIndexColumn(name = "Code")}),
        @OAIndex(name = "ItemCategoryParentItemCategory", columns = { @OAIndexColumn(name = "ParentItemCategoryId") })
    }
)
public class ItemCategory extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
    public static final String PROPERTY_Code = "Code";
    public static final String P_Code = "Code";
    public static final String PROPERTY_Seq = "Seq";
    public static final String P_Seq = "Seq";
    public static final String PROPERTY_HifiveRating = "HifiveRating";
    public static final String P_HifiveRating = "HifiveRating";
    public static final String PROPERTY_HifiveRatingAsString = "HifiveRatingAsString";
    public static final String P_HifiveRatingAsString = "HifiveRatingAsString";
    public static final String PROPERTY_HifiveRatingDate = "HifiveRatingDate";
    public static final String P_HifiveRatingDate = "HifiveRatingDate";
    public static final String PROPERTY_HifiveRatingNote = "HifiveRatingNote";
    public static final String P_HifiveRatingNote = "HifiveRatingNote";
     
     
    public static final String PROPERTY_ItemCategories = "ItemCategories";
    public static final String P_ItemCategories = "ItemCategories";
    public static final String PROPERTY_Items = "Items";
    public static final String P_Items = "Items";
    public static final String PROPERTY_ParentItemCategory = "ParentItemCategory";
    public static final String P_ParentItemCategory = "ParentItemCategory";
     
    protected int id;
    protected String name;
    protected String code;
    protected int seq;
    protected int hifiveRating;
    public static final int HIFIVERATING_unknown = 0;
    public static final int HIFIVERATING_approved = 1;
    public static final int HIFIVERATING_unapproved = 2;
    public static final int HIFIVERATING_somePrograms = 3;
    public static final Hub<String> hubHifiveRating;
    static {
        hubHifiveRating = new Hub<String>(String.class);
        hubHifiveRating.addElement("Unknown");
        hubHifiveRating.addElement("Approved");
        hubHifiveRating.addElement("Unapproved");
        hubHifiveRating.addElement("Some Programs");
    }
    protected OADate hifiveRatingDate;
    protected String hifiveRatingNote;
     
    // Links to other objects.
    protected transient Hub<ItemCategory> hubItemCategories;
    protected transient Hub<Item> hubItems;
    protected transient ItemCategory parentItemCategory;
     
    public ItemCategory() {
    }
     
    public ItemCategory(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(maxLength = 55, isUnicode = true, displayLength = 25)
    @OAColumn(maxLength = 55)
    public String getName() {
        return name;
    }
    
    public void setName(String newValue) {
        fireBeforePropertyChange(P_Name, this.name, newValue);
        String old = name;
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @OAProperty(maxLength = 20, displayLength = 20)
    @OAColumn(maxLength = 20)
    public String getCode() {
        return code;
    }
    
    public void setCode(String newValue) {
        fireBeforePropertyChange(P_Code, this.code, newValue);
        String old = code;
        this.code = newValue;
        firePropertyChange(P_Code, old, this.code);
    }
    @OAProperty(displayLength = 5, isAutoSeq = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getSeq() {
        return seq;
    }
    
    public void setSeq(int newValue) {
        fireBeforePropertyChange(P_Seq, this.seq, newValue);
        int old = seq;
        this.seq = newValue;
        firePropertyChange(P_Seq, old, this.seq);
    }
    @OAProperty(displayName = "Hifive Rating", displayLength = 5, isNameValue = true)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getHifiveRating() {
        return hifiveRating;
    }
    
    public void setHifiveRating(int newValue) {
        fireBeforePropertyChange(P_HifiveRating, this.hifiveRating, newValue);
        int old = hifiveRating;
        this.hifiveRating = newValue;
        firePropertyChange(P_HifiveRating, old, this.hifiveRating);
    }
    public String getHifiveRatingAsString() {
        if (isNull(P_HifiveRating)) return "";
        String s = hubHifiveRating.getAt(getHifiveRating());
        if (s == null) s = "";
        return s;
    }
    @OAProperty(displayName = "Hifive Rating Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getHifiveRatingDate() {
        return hifiveRatingDate;
    }
    
    public void setHifiveRatingDate(OADate newValue) {
        fireBeforePropertyChange(P_HifiveRatingDate, this.hifiveRatingDate, newValue);
        OADate old = hifiveRatingDate;
        this.hifiveRatingDate = newValue;
        firePropertyChange(P_HifiveRatingDate, old, this.hifiveRatingDate);
    }
    @OAProperty(displayName = "Hifive Rating Note", maxLength = 245, displayLength = 40, columnLength = 25)
    @OAColumn(maxLength = 245)
    public String getHifiveRatingNote() {
        return hifiveRatingNote;
    }
    
    public void setHifiveRatingNote(String newValue) {
        fireBeforePropertyChange(P_HifiveRatingNote, this.hifiveRatingNote, newValue);
        String old = hifiveRatingNote;
        this.hifiveRatingNote = newValue;
        firePropertyChange(P_HifiveRatingNote, old, this.hifiveRatingNote);
    }
    @OAMany(
        displayName = "Sub Item Categories", 
        toClass = ItemCategory.class, 
        recursive = true, 
        owner = true, 
        reverseName = ItemCategory.P_ParentItemCategory, 
        cascadeSave = true, 
        cascadeDelete = true, 
        seqProperty = ItemCategory.P_Seq, 
        sortProperty = ItemCategory.P_Seq
    )
    public Hub<ItemCategory> getItemCategories() {
        if (hubItemCategories == null) {
            hubItemCategories = (Hub<ItemCategory>) getHub(P_ItemCategories);
        }
        return hubItemCategories;
    }
    
    @OAMany(
        toClass = Item.class, 
        reverseName = Item.P_ItemCategories
    )
    @OALinkTable(name = "ItemCategoryItem", indexName = "ItemItemCategory", columns = {"ItemCategoryId"})
    public Hub<Item> getItems() {
        if (hubItems == null) {
            hubItems = (Hub<Item>) getHub(P_Items);
        }
        return hubItems;
    }
    
    @OAOne(
        displayName = "Parent Item Category", 
        reverseName = ItemCategory.P_ItemCategories, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"ParentItemCategoryId"})
    public ItemCategory getParentItemCategory() {
        if (parentItemCategory == null) {
            parentItemCategory = (ItemCategory) getObject(P_ParentItemCategory);
        }
        return parentItemCategory;
    }
    
    public void setParentItemCategory(ItemCategory newValue) {
        fireBeforePropertyChange(P_ParentItemCategory, this.parentItemCategory, newValue);
        ItemCategory old = this.parentItemCategory;
        this.parentItemCategory = newValue;
        firePropertyChange(P_ParentItemCategory, old, this.parentItemCategory);
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.name = rs.getString(2);
        this.code = rs.getString(3);
        this.seq = (int) rs.getInt(4);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, ItemCategory.P_Seq, true);
        }
        this.hifiveRating = (int) rs.getInt(5);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, ItemCategory.P_HifiveRating, true);
        }
        java.sql.Date date;
        date = rs.getDate(6);
        if (date != null) this.hifiveRatingDate = new OADate(date);
        this.hifiveRatingNote = rs.getString(7);
        int parentItemCategoryFkey = rs.getInt(8);
        if (!rs.wasNull() && parentItemCategoryFkey > 0) {
            setProperty(P_ParentItemCategory, new OAObjectKey(parentItemCategoryFkey));
        }
        if (rs.getMetaData().getColumnCount() != 8) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

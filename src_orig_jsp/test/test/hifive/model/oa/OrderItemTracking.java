// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;
import com.viaoa.annotation.*;
import com.viaoa.util.OADate;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;
 
@OAClass(
    shortName = "oit",
    displayName = "Order Item Tracking",
    displayProperty = "id"
)
@OATable(
    indexes = {
        @OAIndex(name = "OrderItemTrackingOrderTracking", columns = { @OAIndexColumn(name = "OrderTrackingId") })
    }
)
public class OrderItemTracking extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_SentCarrier = "SentCarrier";
    public static final String P_SentCarrier = "SentCarrier";
    public static final String PROPERTY_ProductionDate = "ProductionDate";
    public static final String P_ProductionDate = "ProductionDate";
    public static final String PROPERTY_SentDate = "SentDate";
    public static final String P_SentDate = "SentDate";
    public static final String PROPERTY_ExpectedDeliveryDate = "ExpectedDeliveryDate";
    public static final String P_ExpectedDeliveryDate = "ExpectedDeliveryDate";
    public static final String PROPERTY_ConfirmEmailDate = "ConfirmEmailDate";
    public static final String P_ConfirmEmailDate = "ConfirmEmailDate";
    public static final String PROPERTY_CarrierTracking = "CarrierTracking";
    public static final String P_CarrierTracking = "CarrierTracking";
    public static final String PROPERTY_CancelDate = "CancelDate";
    public static final String P_CancelDate = "CancelDate";
    public static final String PROPERTY_ReplaceDate = "ReplaceDate";
    public static final String P_ReplaceDate = "ReplaceDate";
    public static final String PROPERTY_Freight = "Freight";
    public static final String P_Freight = "Freight";
     
     
    public static final String PROPERTY_OrderTracking = "OrderTracking";
    public static final String P_OrderTracking = "OrderTracking";
     
    protected int id;
    protected String sentCarrier;
    protected OADate productionDate;
    protected OADate sentDate;
    protected OADate expectedDeliveryDate;
    protected OADate confirmEmailDate;
    protected String carrierTracking;
    protected OADate cancelDate;
    protected OADate replaceDate;
    protected double freight;
     
    // Links to other objects.
    protected transient OrderTracking orderTracking;
     
    public OrderItemTracking() {
    }
     
    public OrderItemTracking(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(displayName = "Sent Carrier", maxLength = 75, displayLength = 25, columnLength = 14)
    @OAColumn(maxLength = 75)
    public String getSentCarrier() {
        return sentCarrier;
    }
    
    public void setSentCarrier(String newValue) {
        fireBeforePropertyChange(P_SentCarrier, this.sentCarrier, newValue);
        String old = sentCarrier;
        this.sentCarrier = newValue;
        firePropertyChange(P_SentCarrier, old, this.sentCarrier);
    }
    @OAProperty(displayName = "Production Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getProductionDate() {
        return productionDate;
    }
    
    public void setProductionDate(OADate newValue) {
        fireBeforePropertyChange(P_ProductionDate, this.productionDate, newValue);
        OADate old = productionDate;
        this.productionDate = newValue;
        firePropertyChange(P_ProductionDate, old, this.productionDate);
    }
    @OAProperty(displayName = "Sent Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getSentDate() {
        return sentDate;
    }
    
    public void setSentDate(OADate newValue) {
        fireBeforePropertyChange(P_SentDate, this.sentDate, newValue);
        OADate old = sentDate;
        this.sentDate = newValue;
        firePropertyChange(P_SentDate, old, this.sentDate);
    }
    @OAProperty(displayName = "Expected Delivery Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getExpectedDeliveryDate() {
        return expectedDeliveryDate;
    }
    
    public void setExpectedDeliveryDate(OADate newValue) {
        fireBeforePropertyChange(P_ExpectedDeliveryDate, this.expectedDeliveryDate, newValue);
        OADate old = expectedDeliveryDate;
        this.expectedDeliveryDate = newValue;
        firePropertyChange(P_ExpectedDeliveryDate, old, this.expectedDeliveryDate);
    }
    @OAProperty(displayName = "Confirm Email Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getConfirmEmailDate() {
        return confirmEmailDate;
    }
    
    public void setConfirmEmailDate(OADate newValue) {
        fireBeforePropertyChange(P_ConfirmEmailDate, this.confirmEmailDate, newValue);
        OADate old = confirmEmailDate;
        this.confirmEmailDate = newValue;
        firePropertyChange(P_ConfirmEmailDate, old, this.confirmEmailDate);
    }
    @OAProperty(displayName = "Carrier Tracking", maxLength = 75, displayLength = 40, columnLength = 12)
    @OAColumn(maxLength = 75)
    public String getCarrierTracking() {
        return carrierTracking;
    }
    
    public void setCarrierTracking(String newValue) {
        fireBeforePropertyChange(P_CarrierTracking, this.carrierTracking, newValue);
        String old = carrierTracking;
        this.carrierTracking = newValue;
        firePropertyChange(P_CarrierTracking, old, this.carrierTracking);
    }
    @OAProperty(displayName = "Cancel Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getCancelDate() {
        return cancelDate;
    }
    
    public void setCancelDate(OADate newValue) {
        fireBeforePropertyChange(P_CancelDate, this.cancelDate, newValue);
        OADate old = cancelDate;
        this.cancelDate = newValue;
        firePropertyChange(P_CancelDate, old, this.cancelDate);
    }
    @OAProperty(displayName = "Replace Date", displayLength = 8)
    @OAColumn(sqlType = java.sql.Types.DATE)
    public OADate getReplaceDate() {
        return replaceDate;
    }
    
    public void setReplaceDate(OADate newValue) {
        fireBeforePropertyChange(P_ReplaceDate, this.replaceDate, newValue);
        OADate old = replaceDate;
        this.replaceDate = newValue;
        firePropertyChange(P_ReplaceDate, old, this.replaceDate);
    }
    @OAProperty(decimalPlaces = 2, isCurrency = true, displayLength = 7)
    @OAColumn(sqlType = java.sql.Types.DOUBLE)
    public double getFreight() {
        return freight;
    }
    
    public void setFreight(double newValue) {
        fireBeforePropertyChange(P_Freight, this.freight, newValue);
        double old = freight;
        this.freight = newValue;
        firePropertyChange(P_Freight, old, this.freight);
    }
    @OAOne(
        displayName = "Order Tracking", 
        reverseName = OrderTracking.P_OrderItemTrackings, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"OrderTrackingId"})
    public OrderTracking getOrderTracking() {
        if (orderTracking == null) {
            orderTracking = (OrderTracking) getObject(P_OrderTracking);
        }
        return orderTracking;
    }
    
    public void setOrderTracking(OrderTracking newValue) {
        fireBeforePropertyChange(P_OrderTracking, this.orderTracking, newValue);
        OrderTracking old = this.orderTracking;
        this.orderTracking = newValue;
        firePropertyChange(P_OrderTracking, old, this.orderTracking);
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.sentCarrier = rs.getString(2);
        java.sql.Date date;
        date = rs.getDate(3);
        if (date != null) this.productionDate = new OADate(date);
        date = rs.getDate(4);
        if (date != null) this.sentDate = new OADate(date);
        date = rs.getDate(5);
        if (date != null) this.expectedDeliveryDate = new OADate(date);
        date = rs.getDate(6);
        if (date != null) this.confirmEmailDate = new OADate(date);
        this.carrierTracking = rs.getString(7);
        date = rs.getDate(8);
        if (date != null) this.cancelDate = new OADate(date);
        date = rs.getDate(9);
        if (date != null) this.replaceDate = new OADate(date);
        this.freight = (double) rs.getDouble(10);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, OrderItemTracking.P_Freight, true);
        }
        int orderTrackingFkey = rs.getInt(11);
        if (!rs.wasNull() && orderTrackingFkey > 0) {
            setProperty(P_OrderTracking, new OAObjectKey(orderTrackingFkey));
        }
        if (rs.getMetaData().getColumnCount() != 11) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

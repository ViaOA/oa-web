// Generated by OABuilder
package test.hifive.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;

import test.hifive.model.oa.filter.*;
import test.hifive.model.oa.propertypath.*;

import com.viaoa.annotation.*;
 
@OAClass(
    shortName = "pt",
    displayName = "Page Theme",
    isLookup = true,
    isPreSelect = true,
    displayProperty = "name",
    sortProperty = "id"
)
@OATable(
)
public class PageTheme extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Name = "Name";
    public static final String P_Name = "Name";
    public static final String PROPERTY_CssFileName = "CssFileName";
    public static final String P_CssFileName = "CssFileName";
     
     
    public static final String PROPERTY_Locations = "Locations";
    public static final String P_Locations = "Locations";
    public static final String PROPERTY_PageThemePageInfos = "PageThemePageInfos";
    public static final String P_PageThemePageInfos = "PageThemePageInfos";
    public static final String PROPERTY_Programs = "Programs";
    public static final String P_Programs = "Programs";
     
    protected int id;
    protected String name;
    protected String cssFileName;
     
    // Links to other objects.
    protected transient Hub<PageThemePageInfo> hubPageThemePageInfos;
    protected transient Hub<Program> hubPrograms;
     
    public PageTheme() {
    }
     
    public PageTheme(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(maxLength = 35, displayLength = 20, columnLength = 18)
    @OAColumn(maxLength = 35)
    public String getName() {
        return name;
    }
    
    public void setName(String newValue) {
        fireBeforePropertyChange(P_Name, this.name, newValue);
        String old = name;
        this.name = newValue;
        firePropertyChange(P_Name, old, this.name);
    }
    @OAProperty(displayName = "CSS File Name", maxLength = 45, displayLength = 20, columnLength = 18)
    @OAColumn(maxLength = 45)
    public String getCssFileName() {
        return cssFileName;
    }
    
    public void setCssFileName(String newValue) {
        fireBeforePropertyChange(P_CssFileName, this.cssFileName, newValue);
        String old = cssFileName;
        this.cssFileName = newValue;
        firePropertyChange(P_CssFileName, old, this.cssFileName);
    }
    @OAMany(
        toClass = Location.class, 
        recursive = false, 
        reverseName = Location.P_PageTheme, 
        createMethod = false
    )
    private Hub<Location> getLocations() {
        // oamodel has createMethod set to false, this method exists only for annotations.
        return null;
    }
    
    @OAMany(
        displayName = "Page Theme Page Infos", 
        toClass = PageThemePageInfo.class, 
        owner = true, 
        reverseName = PageThemePageInfo.P_PageTheme, 
        cascadeSave = true, 
        cascadeDelete = true, 
        uniqueProperty = PageThemePageInfo.P_PageInfo
    )
    public Hub<PageThemePageInfo> getPageThemePageInfos() {
        if (hubPageThemePageInfos == null) {
            hubPageThemePageInfos = (Hub<PageThemePageInfo>) getHub(P_PageThemePageInfos);
        }
        return hubPageThemePageInfos;
    }
    
    @OAMany(
        toClass = Program.class, 
        reverseName = Program.P_PageTheme
    )
    public Hub<Program> getPrograms() {
        if (hubPrograms == null) {
            hubPrograms = (Hub<Program>) getHub(P_Programs);
        }
        return hubPrograms;
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.name = rs.getString(2);
        this.cssFileName = rs.getString(3);
        if (rs.getMetaData().getColumnCount() != 3) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

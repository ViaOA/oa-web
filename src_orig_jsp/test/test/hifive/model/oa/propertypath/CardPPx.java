// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import java.io.Serializable;

import test.hifive.model.oa.*;
 
public class CardPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private AwardCardOrderPPx awardCardOrders;
    private AwardTypePPx awardType;
    private AwardTypePPx calcAwardTypes;
    private CardVendorPPx cardVendor;
    private HifiveOrderCardPPx hifiveOrderCards;
    private LocationPPx imageLocations;
    private ImageStorePPx imageStore;
    private AwardTypePPx imagineAwardTypes;
    private EmployeeAwardPPx imagineEmployeeAwards;
    private ProgramPPx imaginePrograms;
    private EmployeePPx inspireImagineEmployees;
    private LocationPPx locations;
    private MerchantPPx merchants;
    private ProgramPPx programs;
    private ValuePPx values;
     
    public CardPPx(String name) {
        this(null, name);
    }

    public CardPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public AwardCardOrderPPx awardCardOrders() {
        if (awardCardOrders == null) awardCardOrders = new AwardCardOrderPPx(this, Card.P_AwardCardOrders);
        return awardCardOrders;
    }

    public AwardTypePPx awardType() {
        if (awardType == null) awardType = new AwardTypePPx(this, Card.P_AwardType);
        return awardType;
    }

    public AwardTypePPx calcAwardTypes() {
        if (calcAwardTypes == null) calcAwardTypes = new AwardTypePPx(this, Card.P_CalcAwardTypes);
        return calcAwardTypes;
    }

    public CardVendorPPx cardVendor() {
        if (cardVendor == null) cardVendor = new CardVendorPPx(this, Card.P_CardVendor);
        return cardVendor;
    }

    public HifiveOrderCardPPx hifiveOrderCards() {
        if (hifiveOrderCards == null) hifiveOrderCards = new HifiveOrderCardPPx(this, Card.P_HifiveOrderCards);
        return hifiveOrderCards;
    }

    public LocationPPx imageLocations() {
        if (imageLocations == null) imageLocations = new LocationPPx(this, Card.P_ImageLocations);
        return imageLocations;
    }

    public ImageStorePPx imageStore() {
        if (imageStore == null) imageStore = new ImageStorePPx(this, Card.P_ImageStore);
        return imageStore;
    }

    public AwardTypePPx imagineAwardTypes() {
        if (imagineAwardTypes == null) imagineAwardTypes = new AwardTypePPx(this, Card.P_ImagineAwardTypes);
        return imagineAwardTypes;
    }

    public EmployeeAwardPPx imagineEmployeeAwards() {
        if (imagineEmployeeAwards == null) imagineEmployeeAwards = new EmployeeAwardPPx(this, Card.P_ImagineEmployeeAwards);
        return imagineEmployeeAwards;
    }

    public ProgramPPx imaginePrograms() {
        if (imaginePrograms == null) imaginePrograms = new ProgramPPx(this, Card.P_ImaginePrograms);
        return imaginePrograms;
    }

    public EmployeePPx inspireImagineEmployees() {
        if (inspireImagineEmployees == null) inspireImagineEmployees = new EmployeePPx(this, Card.P_InspireImagineEmployees);
        return inspireImagineEmployees;
    }

    public LocationPPx locations() {
        if (locations == null) locations = new LocationPPx(this, Card.P_Locations);
        return locations;
    }

    public MerchantPPx merchants() {
        if (merchants == null) merchants = new MerchantPPx(this, Card.P_Merchants);
        return merchants;
    }

    public ProgramPPx programs() {
        if (programs == null) programs = new ProgramPPx(this, Card.P_Programs);
        return programs;
    }

    public ValuePPx values() {
        if (values == null) values = new ValuePPx(this, Card.P_Values);
        return values;
    }

    public String id() {
        return pp + "." + Card.P_Id;
    }

    public String created() {
        return pp + "." + Card.P_Created;
    }

    public String name() {
        return pp + "." + Card.P_Name;
    }

    public String activeDate() {
        return pp + "." + Card.P_ActiveDate;
    }

    public String digitalCard() {
        return pp + "." + Card.P_DigitalCard;
    }

    public String traditionalCard() {
        return pp + "." + Card.P_TraditionalCard;
    }

    public String celebrateCard() {
        return pp + "." + Card.P_CelebrateCard;
    }

    public String text() {
        return pp + "." + Card.P_Text;
    }

    public String inactiveDate() {
        return pp + "." + Card.P_InactiveDate;
    }

    public String rangeLow() {
        return pp + "." + Card.P_RangeLow;
    }

    public String rangeHigh() {
        return pp + "." + Card.P_RangeHigh;
    }

    public String rangeIncrement() {
        return pp + "." + Card.P_RangeIncrement;
    }

    public String merchantCode() {
        return pp + "." + Card.P_MerchantCode;
    }

    public String digitalOnlyFilter() {
        return pp + ":digitalOnly()";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

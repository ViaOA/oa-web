// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import java.io.Serializable;

import test.hifive.model.oa.*;
 
public class ImageStorePPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private AwardTypePPx awardType;
    private AwardTypePPx awardTypes;
    private AwardTypePPx calcCeoAwardType;
    private AwardTypePPx calcCeoSignatureAwardType;
    private LocationPPx calcLogoStampLocation;
    private CardPPx card;
    private LocationPPx ceoLocation;
    private ProgramPPx ceoProgram;
    private LocationPPx ceoSignatureLocation;
    private ProgramPPx ceoSignatureProgram;
    private CharityPPx charity;
    private EcardPPx ecard;
    private EmployeeAwardPPx employeeAwardCeoImage;
    private EmployeeAwardPPx employeeAwardCeoSignature;
    private ItemPPx item;
    private LocationPPx locationLogo;
    private LocationPageInfoPPx locationPageInfo;
    private LoginImagePPx loginImage;
    private ProgramPPx logoProgram;
    private LocationPPx logoStampLocation;
    private MerchantPPx merchant;
    private PageGroupPageInfoPPx pageGroupPageInfos;
    private PageThemePageInfoPPx pageThemePageInfo;
    private ProgramPPx program;
    private ProgramPPx programLogoStamp;
    private ProgramPageInfoPPx programPageInfo;
     
    public ImageStorePPx(String name) {
        this(null, name);
    }

    public ImageStorePPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public AwardTypePPx awardType() {
        if (awardType == null) awardType = new AwardTypePPx(this, ImageStore.P_AwardType);
        return awardType;
    }

    public AwardTypePPx awardTypes() {
        if (awardTypes == null) awardTypes = new AwardTypePPx(this, ImageStore.P_AwardTypes);
        return awardTypes;
    }

    public AwardTypePPx calcCeoAwardType() {
        if (calcCeoAwardType == null) calcCeoAwardType = new AwardTypePPx(this, ImageStore.P_CalcCeoAwardType);
        return calcCeoAwardType;
    }

    public AwardTypePPx calcCeoSignatureAwardType() {
        if (calcCeoSignatureAwardType == null) calcCeoSignatureAwardType = new AwardTypePPx(this, ImageStore.P_CalcCeoSignatureAwardType);
        return calcCeoSignatureAwardType;
    }

    public LocationPPx calcLogoStampLocation() {
        if (calcLogoStampLocation == null) calcLogoStampLocation = new LocationPPx(this, ImageStore.P_CalcLogoStampLocation);
        return calcLogoStampLocation;
    }

    public CardPPx card() {
        if (card == null) card = new CardPPx(this, ImageStore.P_Card);
        return card;
    }

    public LocationPPx ceoLocation() {
        if (ceoLocation == null) ceoLocation = new LocationPPx(this, ImageStore.P_CeoLocation);
        return ceoLocation;
    }

    public ProgramPPx ceoProgram() {
        if (ceoProgram == null) ceoProgram = new ProgramPPx(this, ImageStore.P_CeoProgram);
        return ceoProgram;
    }

    public LocationPPx ceoSignatureLocation() {
        if (ceoSignatureLocation == null) ceoSignatureLocation = new LocationPPx(this, ImageStore.P_CeoSignatureLocation);
        return ceoSignatureLocation;
    }

    public ProgramPPx ceoSignatureProgram() {
        if (ceoSignatureProgram == null) ceoSignatureProgram = new ProgramPPx(this, ImageStore.P_CeoSignatureProgram);
        return ceoSignatureProgram;
    }

    public CharityPPx charity() {
        if (charity == null) charity = new CharityPPx(this, ImageStore.P_Charity);
        return charity;
    }

    public EcardPPx ecard() {
        if (ecard == null) ecard = new EcardPPx(this, ImageStore.P_Ecard);
        return ecard;
    }

    public EmployeeAwardPPx employeeAwardCeoImage() {
        if (employeeAwardCeoImage == null) employeeAwardCeoImage = new EmployeeAwardPPx(this, ImageStore.P_EmployeeAwardCeoImage);
        return employeeAwardCeoImage;
    }

    public EmployeeAwardPPx employeeAwardCeoSignature() {
        if (employeeAwardCeoSignature == null) employeeAwardCeoSignature = new EmployeeAwardPPx(this, ImageStore.P_EmployeeAwardCeoSignature);
        return employeeAwardCeoSignature;
    }

    public ItemPPx item() {
        if (item == null) item = new ItemPPx(this, ImageStore.P_Item);
        return item;
    }

    public LocationPPx locationLogo() {
        if (locationLogo == null) locationLogo = new LocationPPx(this, ImageStore.P_LocationLogo);
        return locationLogo;
    }

    public LocationPageInfoPPx locationPageInfo() {
        if (locationPageInfo == null) locationPageInfo = new LocationPageInfoPPx(this, ImageStore.P_LocationPageInfo);
        return locationPageInfo;
    }

    public LoginImagePPx loginImage() {
        if (loginImage == null) loginImage = new LoginImagePPx(this, ImageStore.P_LoginImage);
        return loginImage;
    }

    public ProgramPPx logoProgram() {
        if (logoProgram == null) logoProgram = new ProgramPPx(this, ImageStore.P_LogoProgram);
        return logoProgram;
    }

    public LocationPPx logoStampLocation() {
        if (logoStampLocation == null) logoStampLocation = new LocationPPx(this, ImageStore.P_LogoStampLocation);
        return logoStampLocation;
    }

    public MerchantPPx merchant() {
        if (merchant == null) merchant = new MerchantPPx(this, ImageStore.P_Merchant);
        return merchant;
    }

    public PageGroupPageInfoPPx pageGroupPageInfos() {
        if (pageGroupPageInfos == null) pageGroupPageInfos = new PageGroupPageInfoPPx(this, ImageStore.P_PageGroupPageInfos);
        return pageGroupPageInfos;
    }

    public PageThemePageInfoPPx pageThemePageInfo() {
        if (pageThemePageInfo == null) pageThemePageInfo = new PageThemePageInfoPPx(this, ImageStore.P_PageThemePageInfo);
        return pageThemePageInfo;
    }

    public ProgramPPx program() {
        if (program == null) program = new ProgramPPx(this, ImageStore.P_Program);
        return program;
    }

    public ProgramPPx programLogoStamp() {
        if (programLogoStamp == null) programLogoStamp = new ProgramPPx(this, ImageStore.P_ProgramLogoStamp);
        return programLogoStamp;
    }

    public ProgramPageInfoPPx programPageInfo() {
        if (programPageInfo == null) programPageInfo = new ProgramPageInfoPPx(this, ImageStore.P_ProgramPageInfo);
        return programPageInfo;
    }

    public String id() {
        return pp + "." + ImageStore.P_Id;
    }

    public String created() {
        return pp + "." + ImageStore.P_Created;
    }

    public String origFileName() {
        return pp + "." + ImageStore.P_OrigFileName;
    }

    public String description() {
        return pp + "." + ImageStore.P_Description;
    }

    public String lastUpdate() {
        return pp + "." + ImageStore.P_LastUpdate;
    }

    public String bytes() {
        return pp + "." + ImageStore.P_Bytes;
    }

    public String imageHandling() {
        return pp + ".imageHandling";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

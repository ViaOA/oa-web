// Generated by OABuilder
package test.hifive.model.oa.propertypath;
 
import test.hifive.model.oa.*;
 
public class LocationPP {
    private static AddOnItemPPx addOnItems;
    private static AddressPPx address;
    private static ProgramDocumentPPx announcementDocument;
    private static AwardTypePPx awardTypes;
    private static CountryCodePPx calcCountryCode;
    private static ImageStorePPx calcLogoStampImageStore;
    private static CardPPx cards;
    private static ImageStorePPx ceoImageStore;
    private static ImageStorePPx ceoSignatureImageStore;
    private static CharityPPx charities;
    private static CountryCodePPx countryCode;
    private static EcardPPx ecards;
    private static EmployeePPx employees;
    private static HifiveQualityPPx hifiveQualities;
    private static CardPPx imagineCard;
    private static InspireAwardLevelLocationValuePPx inspireAwardLevelLocationValues;
    private static AwardTypePPx inspireAwardType;
    private static InspireCoreValuePPx inspireCoreValues;
    private static LocationEmailTypePPx locationEmailTypes;
    private static LocationPageGroupPPx locationPageGroups;
    private static LocationPageInfoPPx locationPageInfos;
    private static LocationPPx locations;
    private static LocationTypePPx locationType;
    private static ImageStorePPx logoImageStore;
    private static ImageStorePPx logoStampImageStore;
    private static QuizPPx nominationQuiz;
    private static PageThemePPx pageTheme;
    private static LocationPPx parentLocation;
    private static PointsAwardLevelPPx pointsAwardLevels;
    private static PointsCoreValuePPx pointsCoreValues;
    private static ProgramPPx program;
    private static ProgramEventPPx programEvents;
    private static ProgramFaqPPx programFaqs;
     

    public static AddOnItemPPx addOnItems() {
        if (addOnItems == null) addOnItems = new AddOnItemPPx(Location.P_AddOnItems);
        return addOnItems;
    }

    public static AddressPPx address() {
        if (address == null) address = new AddressPPx(Location.P_Address);
        return address;
    }

    public static ProgramDocumentPPx announcementDocument() {
        if (announcementDocument == null) announcementDocument = new ProgramDocumentPPx(Location.P_AnnouncementDocument);
        return announcementDocument;
    }

    public static AwardTypePPx awardTypes() {
        if (awardTypes == null) awardTypes = new AwardTypePPx(Location.P_AwardTypes);
        return awardTypes;
    }

    public static CountryCodePPx calcCountryCode() {
        if (calcCountryCode == null) calcCountryCode = new CountryCodePPx(Location.P_CalcCountryCode);
        return calcCountryCode;
    }

    public static ImageStorePPx calcLogoStampImageStore() {
        if (calcLogoStampImageStore == null) calcLogoStampImageStore = new ImageStorePPx(Location.P_CalcLogoStampImageStore);
        return calcLogoStampImageStore;
    }

    public static CardPPx cards() {
        if (cards == null) cards = new CardPPx(Location.P_Cards);
        return cards;
    }

    public static ImageStorePPx ceoImageStore() {
        if (ceoImageStore == null) ceoImageStore = new ImageStorePPx(Location.P_CeoImageStore);
        return ceoImageStore;
    }

    public static ImageStorePPx ceoSignatureImageStore() {
        if (ceoSignatureImageStore == null) ceoSignatureImageStore = new ImageStorePPx(Location.P_CeoSignatureImageStore);
        return ceoSignatureImageStore;
    }

    public static CharityPPx charities() {
        if (charities == null) charities = new CharityPPx(Location.P_Charities);
        return charities;
    }

    public static CountryCodePPx countryCode() {
        if (countryCode == null) countryCode = new CountryCodePPx(Location.P_CountryCode);
        return countryCode;
    }

    public static EcardPPx ecards() {
        if (ecards == null) ecards = new EcardPPx(Location.P_Ecards);
        return ecards;
    }

    public static EmployeePPx employees() {
        if (employees == null) employees = new EmployeePPx(Location.P_Employees);
        return employees;
    }

    public static HifiveQualityPPx hifiveQualities() {
        if (hifiveQualities == null) hifiveQualities = new HifiveQualityPPx(Location.P_HifiveQualities);
        return hifiveQualities;
    }

    public static CardPPx imagineCard() {
        if (imagineCard == null) imagineCard = new CardPPx(Location.P_ImagineCard);
        return imagineCard;
    }

    public static InspireAwardLevelLocationValuePPx inspireAwardLevelLocationValues() {
        if (inspireAwardLevelLocationValues == null) inspireAwardLevelLocationValues = new InspireAwardLevelLocationValuePPx(Location.P_InspireAwardLevelLocationValues);
        return inspireAwardLevelLocationValues;
    }

    public static AwardTypePPx inspireAwardType() {
        if (inspireAwardType == null) inspireAwardType = new AwardTypePPx(Location.P_InspireAwardType);
        return inspireAwardType;
    }

    public static InspireCoreValuePPx inspireCoreValues() {
        if (inspireCoreValues == null) inspireCoreValues = new InspireCoreValuePPx(Location.P_InspireCoreValues);
        return inspireCoreValues;
    }

    public static LocationEmailTypePPx locationEmailTypes() {
        if (locationEmailTypes == null) locationEmailTypes = new LocationEmailTypePPx(Location.P_LocationEmailTypes);
        return locationEmailTypes;
    }

    public static LocationPageGroupPPx locationPageGroups() {
        if (locationPageGroups == null) locationPageGroups = new LocationPageGroupPPx(Location.P_LocationPageGroups);
        return locationPageGroups;
    }

    public static LocationPageInfoPPx locationPageInfos() {
        if (locationPageInfos == null) locationPageInfos = new LocationPageInfoPPx(Location.P_LocationPageInfos);
        return locationPageInfos;
    }

    public static LocationPPx locations() {
        if (locations == null) locations = new LocationPPx(Location.P_Locations);
        return locations;
    }

    public static LocationTypePPx locationType() {
        if (locationType == null) locationType = new LocationTypePPx(Location.P_LocationType);
        return locationType;
    }

    public static ImageStorePPx logoImageStore() {
        if (logoImageStore == null) logoImageStore = new ImageStorePPx(Location.P_LogoImageStore);
        return logoImageStore;
    }

    public static ImageStorePPx logoStampImageStore() {
        if (logoStampImageStore == null) logoStampImageStore = new ImageStorePPx(Location.P_LogoStampImageStore);
        return logoStampImageStore;
    }

    public static QuizPPx nominationQuiz() {
        if (nominationQuiz == null) nominationQuiz = new QuizPPx(Location.P_NominationQuiz);
        return nominationQuiz;
    }

    public static PageThemePPx pageTheme() {
        if (pageTheme == null) pageTheme = new PageThemePPx(Location.P_PageTheme);
        return pageTheme;
    }

    public static LocationPPx parentLocation() {
        if (parentLocation == null) parentLocation = new LocationPPx(Location.P_ParentLocation);
        return parentLocation;
    }

    public static PointsAwardLevelPPx pointsAwardLevels() {
        if (pointsAwardLevels == null) pointsAwardLevels = new PointsAwardLevelPPx(Location.P_PointsAwardLevels);
        return pointsAwardLevels;
    }

    public static PointsCoreValuePPx pointsCoreValues() {
        if (pointsCoreValues == null) pointsCoreValues = new PointsCoreValuePPx(Location.P_PointsCoreValues);
        return pointsCoreValues;
    }

    public static ProgramPPx program() {
        if (program == null) program = new ProgramPPx(Location.P_Program);
        return program;
    }

    public static ProgramEventPPx programEvents() {
        if (programEvents == null) programEvents = new ProgramEventPPx(Location.P_ProgramEvents);
        return programEvents;
    }

    public static ProgramFaqPPx programFaqs() {
        if (programFaqs == null) programFaqs = new ProgramFaqPPx(Location.P_ProgramFaqs);
        return programFaqs;
    }

    public static String id() {
        String s = Location.P_Id;
        return s;
    }

    public static String created() {
        String s = Location.P_Created;
        return s;
    }

    public static String name() {
        String s = Location.P_Name;
        return s;
    }

    public static String name2() {
        String s = Location.P_Name2;
        return s;
    }

    public static String seq() {
        String s = Location.P_Seq;
        return s;
    }

    public static String code() {
        String s = Location.P_Code;
        return s;
    }

    public static String charityGoal() {
        String s = Location.P_CharityGoal;
        return s;
    }

    public static String fromEmailAddress() {
        String s = Location.P_FromEmailAddress;
        return s;
    }

    public static String testEmail() {
        String s = Location.P_TestEmail;
        return s;
    }

    public static String calcCharityTotal() {
        String s = Location.P_CalcCharityTotal;
        return s;
    }

    public static String deleteEmployees() {
        String s = "deleteEmployees";
        return s;
    }
}
 

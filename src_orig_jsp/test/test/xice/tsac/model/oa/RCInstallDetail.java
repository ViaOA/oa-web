// Generated by OABuilder
package test.xice.tsac.model.oa;
 
import java.sql.*;
import com.viaoa.object.*;
import com.viaoa.hub.*;
import com.viaoa.util.*;

import test.xice.tsac.model.oa.filter.*;
import test.xice.tsac.model.oa.propertypath.*;

import com.viaoa.annotation.*;
 
@OAClass(
    shortName = "rcid",
    displayName = "RC Install Detail",
    displayProperty = "packageName"
)
@OATable(
    indexes = {
        @OAIndex(name = "RCInstallDetailRcInstall", columns = { @OAIndexColumn(name = "RcInstallId") })
    }
)
public class RCInstallDetail extends OAObject {
    private static final long serialVersionUID = 1L;
    public static final String PROPERTY_Id = "Id";
    public static final String P_Id = "Id";
    public static final String PROPERTY_Selected = "Selected";
    public static final String P_Selected = "Selected";
    public static final String PROPERTY_Error = "Error";
    public static final String P_Error = "Error";
    public static final String PROPERTY_Message = "Message";
    public static final String P_Message = "Message";
    public static final String PROPERTY_PackageId = "PackageId";
    public static final String P_PackageId = "PackageId";
    public static final String PROPERTY_PackageName = "PackageName";
    public static final String P_PackageName = "PackageName";
    public static final String PROPERTY_BeforeVersion = "BeforeVersion";
    public static final String P_BeforeVersion = "BeforeVersion";
    public static final String PROPERTY_AfterVersion = "AfterVersion";
    public static final String P_AfterVersion = "AfterVersion";
    public static final String PROPERTY_DestHost = "DestHost";
    public static final String P_DestHost = "DestHost";
    public static final String PROPERTY_TotalTime = "TotalTime";
    public static final String P_TotalTime = "TotalTime";
    public static final String PROPERTY_InvalidMessage = "InvalidMessage";
    public static final String P_InvalidMessage = "InvalidMessage";
    public static final String PROPERTY_Loaded = "Loaded";
    public static final String P_Loaded = "Loaded";
     
     
    public static final String PROPERTY_AfterPackageVersion = "AfterPackageVersion";
    public static final String P_AfterPackageVersion = "AfterPackageVersion";
    public static final String PROPERTY_BeforePackageVersion = "BeforePackageVersion";
    public static final String P_BeforePackageVersion = "BeforePackageVersion";
    public static final String PROPERTY_RCDeployDetail = "RCDeployDetail";
    public static final String P_RCDeployDetail = "RCDeployDetail";
    public static final String PROPERTY_RCInstall = "RCInstall";
    public static final String P_RCInstall = "RCInstall";
    public static final String PROPERTY_Server = "Server";
    public static final String P_Server = "Server";
     
    protected int id;
    protected boolean selected;
    protected String error;
    protected String message;
    protected String packageId;
    protected String packageName;
    protected String beforeVersion;
    protected String afterVersion;
    protected String destHost;
    protected int totalTime;
    protected String invalidMessage;
    protected boolean loaded;
     
    // Links to other objects.
    protected transient PackageVersion afterPackageVersion;
    protected transient PackageVersion beforePackageVersion;
    protected transient RCDeployDetail rcDeployDetail;
    protected transient RCInstall rcInstall;
    protected transient Server server;
     
    public RCInstallDetail() {
    }
     
    public RCInstallDetail(int id) {
        this();
        setId(id);
    }
     
    @OAProperty(isUnique = true, displayLength = 5)
    @OAId()
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    public int getId() {
        return id;
    }
    
    public void setId(int newValue) {
        fireBeforePropertyChange(P_Id, this.id, newValue);
        int old = id;
        this.id = newValue;
        firePropertyChange(P_Id, old, this.id);
    }
    @OAProperty(displayLength = 5, isProcessed = true)
    @OAColumn(sqlType = java.sql.Types.BOOLEAN)
    public boolean getSelected() {
        return selected;
    }
    
    public void setSelected(boolean newValue) {
        fireBeforePropertyChange(P_Selected, this.selected, newValue);
        boolean old = selected;
        this.selected = newValue;
        firePropertyChange(P_Selected, old, this.selected);
    }
    @OAProperty(maxLength = 128, displayLength = 40, columnLength = 18)
    @OAColumn(maxLength = 128)
    public String getError() {
        return error;
    }
    
    public void setError(String newValue) {
        fireBeforePropertyChange(P_Error, this.error, newValue);
        String old = error;
        this.error = newValue;
        firePropertyChange(P_Error, old, this.error);
    }
    @OAProperty(maxLength = 128, displayLength = 40, columnLength = 18)
    @OAColumn(name = "Error", maxLength = 128)
    public String getMessage() {
        return message;
    }
    
    public void setMessage(String newValue) {
        fireBeforePropertyChange(P_Message, this.message, newValue);
        String old = message;
        this.message = newValue;
        firePropertyChange(P_Message, old, this.message);
    }
    @OAProperty(displayName = "Package Id", maxLength = 55, displayLength = 20, columnLength = 11)
    @OAColumn(maxLength = 55)
    public String getPackageId() {
        return packageId;
    }
    
    public void setPackageId(String newValue) {
        fireBeforePropertyChange(P_PackageId, this.packageId, newValue);
        String old = packageId;
        this.packageId = newValue;
        firePropertyChange(P_PackageId, old, this.packageId);
    }
    @OAProperty(displayName = "Package Name", maxLength = 55, displayLength = 20, columnLength = 11)
    @OAColumn(maxLength = 55)
    public String getPackageName() {
        return packageName;
    }
    
    public void setPackageName(String newValue) {
        fireBeforePropertyChange(P_PackageName, this.packageName, newValue);
        String old = packageName;
        this.packageName = newValue;
        firePropertyChange(P_PackageName, old, this.packageName);
    }
    @OAProperty(displayName = "Before Version", maxLength = 20, displayLength = 20, columnLength = 8)
    @OAColumn(maxLength = 20)
    public String getBeforeVersion() {
        return beforeVersion;
    }
    
    public void setBeforeVersion(String newValue) {
        fireBeforePropertyChange(P_BeforeVersion, this.beforeVersion, newValue);
        String old = beforeVersion;
        this.beforeVersion = newValue;
        firePropertyChange(P_BeforeVersion, old, this.beforeVersion);
    }
    @OAProperty(displayName = "After Version", maxLength = 20, displayLength = 15, columnLength = 8)
    @OAColumn(maxLength = 20)
    public String getAfterVersion() {
        return afterVersion;
    }
    
    public void setAfterVersion(String newValue) {
        fireBeforePropertyChange(P_AfterVersion, this.afterVersion, newValue);
        String old = afterVersion;
        this.afterVersion = newValue;
        firePropertyChange(P_AfterVersion, old, this.afterVersion);
    }
    @OAProperty(displayName = "Dest Host", maxLength = 35, displayLength = 20, columnLength = 14)
    @OAColumn(maxLength = 35)
    public String getDestHost() {
        return destHost;
    }
    
    public void setDestHost(String newValue) {
        fireBeforePropertyChange(P_DestHost, this.destHost, newValue);
        String old = destHost;
        this.destHost = newValue;
        firePropertyChange(P_DestHost, old, this.destHost);
    }
    @OAProperty(displayName = "Total Time", description = "ms", displayLength = 5)
    @OAColumn(sqlType = java.sql.Types.INTEGER)
    /**
      ms
    */
    public int getTotalTime() {
        return totalTime;
    }
    
    public void setTotalTime(int newValue) {
        fireBeforePropertyChange(P_TotalTime, this.totalTime, newValue);
        int old = totalTime;
        this.totalTime = newValue;
        firePropertyChange(P_TotalTime, old, this.totalTime);
    }
    @OAProperty(displayName = "Invalid Message", maxLength = 120, displayLength = 40, isProcessed = true)
    @OAColumn(maxLength = 120)
    public String getInvalidMessage() {
        return invalidMessage;
    }
    
    public void setInvalidMessage(String newValue) {
        fireBeforePropertyChange(P_InvalidMessage, this.invalidMessage, newValue);
        String old = invalidMessage;
        this.invalidMessage = newValue;
        firePropertyChange(P_InvalidMessage, old, this.invalidMessage);
    }
    @OAProperty(displayLength = 5, columnLength = 11)
    @OAColumn(sqlType = java.sql.Types.BOOLEAN)
    public boolean getLoaded() {
        return loaded;
    }
    
    public void setLoaded(boolean newValue) {
        fireBeforePropertyChange(P_Loaded, this.loaded, newValue);
        boolean old = loaded;
        this.loaded = newValue;
        firePropertyChange(P_Loaded, old, this.loaded);
    }
    @OAOne(
        displayName = "After Package Version", 
        reverseName = PackageVersion.P_RCAfterInstallDetails
    )
    @OAFkey(columns = {"AfterPackageVersionId"})
    public PackageVersion getAfterPackageVersion() {
        if (afterPackageVersion == null) {
            afterPackageVersion = (PackageVersion) getObject(P_AfterPackageVersion);
        }
        return afterPackageVersion;
    }
    
    public void setAfterPackageVersion(PackageVersion newValue) {
        fireBeforePropertyChange(P_AfterPackageVersion, this.afterPackageVersion, newValue);
        PackageVersion old = this.afterPackageVersion;
        this.afterPackageVersion = newValue;
        firePropertyChange(P_AfterPackageVersion, old, this.afterPackageVersion);
    }
    
    @OAOne(
        displayName = "Before Package Version", 
        reverseName = PackageVersion.P_RCBeforeInstallDetails
    )
    @OAFkey(columns = {"BeforePackageVersionId"})
    public PackageVersion getBeforePackageVersion() {
        if (beforePackageVersion == null) {
            beforePackageVersion = (PackageVersion) getObject(P_BeforePackageVersion);
        }
        return beforePackageVersion;
    }
    
    public void setBeforePackageVersion(PackageVersion newValue) {
        fireBeforePropertyChange(P_BeforePackageVersion, this.beforePackageVersion, newValue);
        PackageVersion old = this.beforePackageVersion;
        this.beforePackageVersion = newValue;
        firePropertyChange(P_BeforePackageVersion, old, this.beforePackageVersion);
    }
    
    @OAOne(
        displayName = "RC Deploy Detail", 
        reverseName = RCDeployDetail.P_RCInstallDetail
    )
    public RCDeployDetail getRCDeployDetail() {
        if (rcDeployDetail == null) {
            rcDeployDetail = (RCDeployDetail) getObject(P_RCDeployDetail);
        }
        return rcDeployDetail;
    }
    
    public void setRCDeployDetail(RCDeployDetail newValue) {
        fireBeforePropertyChange(P_RCDeployDetail, this.rcDeployDetail, newValue);
        RCDeployDetail old = this.rcDeployDetail;
        this.rcDeployDetail = newValue;
        firePropertyChange(P_RCDeployDetail, old, this.rcDeployDetail);
    }
    
    @OAOne(
        displayName = "RC Install", 
        reverseName = RCInstall.P_RCInstallDetails, 
        required = true, 
        allowCreateNew = false
    )
    @OAFkey(columns = {"RcInstallId"})
    public RCInstall getRCInstall() {
        if (rcInstall == null) {
            rcInstall = (RCInstall) getObject(P_RCInstall);
        }
        return rcInstall;
    }
    
    public void setRCInstall(RCInstall newValue) {
        fireBeforePropertyChange(P_RCInstall, this.rcInstall, newValue);
        RCInstall old = this.rcInstall;
        this.rcInstall = newValue;
        firePropertyChange(P_RCInstall, old, this.rcInstall);
    }
    
    @OAOne(
        reverseName = Server.P_RCInstallDetails
    )
    @OAFkey(columns = {"ServerId"})
    public Server getServer() {
        if (server == null) {
            server = (Server) getObject(P_Server);
        }
        return server;
    }
    
    public void setServer(Server newValue) {
        fireBeforePropertyChange(P_Server, this.server, newValue);
        Server old = this.server;
        this.server = newValue;
        firePropertyChange(P_Server, old, this.server);
    }
    
    public void load(ResultSet rs, int id) throws SQLException {
        this.id = id;
        this.selected = rs.getBoolean(2);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, RCInstallDetail.P_Selected, true);
        }
        this.error = rs.getString(3);
        this.message = rs.getString(4);
        this.packageId = rs.getString(5);
        this.packageName = rs.getString(6);
        this.beforeVersion = rs.getString(7);
        this.afterVersion = rs.getString(8);
        this.destHost = rs.getString(9);
        this.totalTime = (int) rs.getInt(10);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, RCInstallDetail.P_TotalTime, true);
        }
        this.invalidMessage = rs.getString(11);
        this.loaded = rs.getBoolean(12);
        if (rs.wasNull()) {
            OAObjectInfoDelegate.setPrimitiveNull(this, RCInstallDetail.P_Loaded, true);
        }
        int afterPackageVersionFkey = rs.getInt(13);
        if (!rs.wasNull() && afterPackageVersionFkey > 0) {
            setProperty(P_AfterPackageVersion, new OAObjectKey(afterPackageVersionFkey));
        }
        int beforePackageVersionFkey = rs.getInt(14);
        if (!rs.wasNull() && beforePackageVersionFkey > 0) {
            setProperty(P_BeforePackageVersion, new OAObjectKey(beforePackageVersionFkey));
        }
        int rcInstallFkey = rs.getInt(15);
        if (!rs.wasNull() && rcInstallFkey > 0) {
            setProperty(P_RCInstall, new OAObjectKey(rcInstallFkey));
        }
        int serverFkey = rs.getInt(16);
        if (!rs.wasNull() && serverFkey > 0) {
            setProperty(P_Server, new OAObjectKey(serverFkey));
        }
        if (rs.getMetaData().getColumnCount() != 16) {
            throw new SQLException("invalid number of columns for load method");
        }

        changedFlag = false;
        newFlag = false;
    }
}
 

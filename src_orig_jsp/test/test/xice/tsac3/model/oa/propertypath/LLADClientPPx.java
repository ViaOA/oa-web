// Generated by OABuilder
package test.xice.tsac3.model.oa.propertypath;
 
import java.io.Serializable;

import test.xice.tsac3.model.oa.*;
 
public class LLADClientPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private LLADServerPPx lladServer;
    private ServerPPx server;
    private UserLoginHistoryPPx userLoginHistories;
    private UserLoginPPx userLogins;
     
    public LLADClientPPx(String name) {
        this(null, name);
    }

    public LLADClientPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public LLADServerPPx lladServer() {
        if (lladServer == null) lladServer = new LLADServerPPx(this, LLADClient.P_LLADServer);
        return lladServer;
    }

    public ServerPPx server() {
        if (server == null) server = new ServerPPx(this, LLADClient.P_Server);
        return server;
    }

    public UserLoginHistoryPPx userLoginHistories() {
        if (userLoginHistories == null) userLoginHistories = new UserLoginHistoryPPx(this, LLADClient.P_UserLoginHistories);
        return userLoginHistories;
    }

    public UserLoginPPx userLogins() {
        if (userLogins == null) userLogins = new UserLoginPPx(this, LLADClient.P_UserLogins);
        return userLogins;
    }

    public String id() {
        return pp + "." + LLADClient.P_Id;
    }

    public String routerName() {
        return pp + "." + LLADClient.P_RouterName;
    }

    public String routerType() {
        return pp + "." + LLADClient.P_RouterType;
    }

    public String ipAddress() {
        return pp + "." + LLADClient.P_IpAddress;
    }

    public String startedDateTime() {
        return pp + "." + LLADClient.P_StartedDateTime;
    }

    public String registeredDateTime() {
        return pp + "." + LLADClient.P_RegisteredDateTime;
    }

    public String lastPingDateTime() {
        return pp + "." + LLADClient.P_LastPingDateTime;
    }

    public String lastHeartbeatDateTime() {
        return pp + "." + LLADClient.P_LastHeartbeatDateTime;
    }

    public String status() {
        return pp + "." + LLADClient.P_Status;
    }

    public String activeMode() {
        return pp + "." + LLADClient.P_ActiveMode;
    }

    public String viewOnly() {
        return pp + "." + LLADClient.P_ViewOnly;
    }

    public String serverVersion() {
        return pp + "." + LLADClient.P_ServerVersion;
    }

    public String idlVersion() {
        return pp + "." + LLADClient.P_IdlVersion;
    }

    public String enableLLADCommands() {
        return pp + "." + LLADClient.P_EnableLLADCommands;
    }

    public String forceLogoutAllUsers() {
        return pp + ".forceLogoutAllUsers";
    }

    public String siloFilter() {
        return pp + ":silo()";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 

// Generated by OABuilder
package test.xice.tsac3.model.oa.propertypath;
 
import test.xice.tsac3.model.oa.*;
 
public class RCExecutePP {
    private static RCCommandPPx rcCommand;
    private static RCInstalledVersionPPx rcInstalledVersions;
     

    public static RCCommandPPx rcCommand() {
        if (rcCommand == null) rcCommand = new RCCommandPPx(RCExecute.P_RCCommand);
        return rcCommand;
    }

    public static RCInstalledVersionPPx rcInstalledVersions() {
        if (rcInstalledVersions == null) rcInstalledVersions = new RCInstalledVersionPPx(RCExecute.P_RCInstalledVersions);
        return rcInstalledVersions;
    }

    public static String id() {
        String s = RCExecute.P_Id;
        return s;
    }

    public static String created() {
        String s = RCExecute.P_Created;
        return s;
    }

    public static String started() {
        String s = RCExecute.P_Started;
        return s;
    }

    public static String completed() {
        String s = RCExecute.P_Completed;
        return s;
    }

    public static String commandLine() {
        String s = RCExecute.P_CommandLine;
        return s;
    }

    public static String configFileName() {
        String s = RCExecute.P_ConfigFileName;
        return s;
    }

    public static String input() {
        String s = RCExecute.P_Input;
        return s;
    }

    public static String output() {
        String s = RCExecute.P_Output;
        return s;
    }

    public static String error() {
        String s = RCExecute.P_Error;
        return s;
    }

    public static String console() {
        String s = RCExecute.P_Console;
        return s;
    }

    public static String processed() {
        String s = RCExecute.P_Processed;
        return s;
    }

    public static String processingOutput() {
        String s = RCExecute.P_ProcessingOutput;
        return s;
    }

    public static String loaded() {
        String s = RCExecute.P_Loaded;
        return s;
    }

    public static String canRun() {
        String s = RCExecute.P_CanRun;
        return s;
    }

    public static String run() {
        String s = "run";
        return s;
    }
}
 

// Generated by OABuilder
package test.xice.tsac3.model.oa.propertypath;
 
import java.io.Serializable;

import test.xice.tsac3.model.oa.*;
 
public class UserLoginPPx implements PPxInterface, Serializable {
    private static final long serialVersionUID = 1L;
    public final String pp;  // propertyPath
    private ClientAppTypePPx clientAppType;
    private LLADClientPPx lladClient;
    private LoginTypePPx loginType;
    private UserPPx user;
     
    public UserLoginPPx(String name) {
        this(null, name);
    }

    public UserLoginPPx(PPxInterface parent, String name) {
        String s = null;
        if (parent != null) {
            s = parent.toString();
        }
        if (s == null) s = "";
        if (name != null) {
            if (s.length() > 0) s += ".";
            s += name;
        }
        pp = s;
    }

    public ClientAppTypePPx clientAppType() {
        if (clientAppType == null) clientAppType = new ClientAppTypePPx(this, UserLogin.P_ClientAppType);
        return clientAppType;
    }

    public LLADClientPPx lladClient() {
        if (lladClient == null) lladClient = new LLADClientPPx(this, UserLogin.P_LLADClient);
        return lladClient;
    }

    public LoginTypePPx loginType() {
        if (loginType == null) loginType = new LoginTypePPx(this, UserLogin.P_LoginType);
        return loginType;
    }

    public UserPPx user() {
        if (user == null) user = new UserPPx(this, UserLogin.P_User);
        return user;
    }

    public String id() {
        return pp + "." + UserLogin.P_Id;
    }

    public String login() {
        return pp + "." + UserLogin.P_Login;
    }

    public String gateway() {
        return pp + "." + UserLogin.P_Gateway;
    }

    public String password() {
        return pp + "." + UserLogin.P_Password;
    }

    public String forceLogout() {
        return pp + ".forceLogout";
    }

    public String refreshUserCache() {
        return pp + ".refreshUserCache";
    }

    @Override
    public String toString() {
        return pp;
    }
}
 
